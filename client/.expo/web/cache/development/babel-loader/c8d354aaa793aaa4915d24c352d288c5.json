{"ast":null,"code":"import _defineProperty from \"@babel/runtime/helpers/defineProperty\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/objectWithoutProperties\";\nvar _excluded = [\"rootStyle\", \"textInputStyle\", \"onBlur\", \"onFocus\", \"value\", \"renderCell\", \"cellCount\", \"RootProps\", \"RootComponent\"];\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport React from 'react';\nimport { getStyle, getSymbols } from \"./utils\";\nimport { useFocusState } from \"./useFocusState\";\nimport { styles } from \"./CodeField.styles\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar DEFAULT_CELL_COUNT = 4;\n\nfunction CodeFieldComponent(_ref, ref) {\n  var rootStyle = _ref.rootStyle,\n      textInputStyle = _ref.textInputStyle,\n      onBlur = _ref.onBlur,\n      onFocus = _ref.onFocus,\n      value = _ref.value,\n      renderCell = _ref.renderCell,\n      _ref$cellCount = _ref.cellCount,\n      cellCount = _ref$cellCount === void 0 ? DEFAULT_CELL_COUNT : _ref$cellCount,\n      _ref$RootProps = _ref.RootProps,\n      RootProps = _ref$RootProps === void 0 ? {} : _ref$RootProps,\n      _ref$RootComponent = _ref.RootComponent,\n      RootComponent = _ref$RootComponent === void 0 ? View : _ref$RootComponent,\n      rest = _objectWithoutProperties(_ref, _excluded);\n\n  var focusState = useFocusState(onBlur, onFocus);\n  var cells = getSymbols(value || '', cellCount).map(function (symbol, index, symbols) {\n    var isFirstEmptySymbol = symbols.indexOf('') === index;\n    return renderCell({\n      index: index,\n      symbol: symbol,\n      isFocused: focusState.isFocused && isFirstEmptySymbol\n    });\n  });\n  return _jsxs(RootComponent, _objectSpread(_objectSpread({}, RootProps), {}, {\n    style: getStyle(styles.root, rootStyle),\n    children: [cells, _jsx(TextInput, _objectSpread(_objectSpread({\n      disableFullscreenUI: true,\n      caretHidden: true,\n      spellCheck: false,\n      autoCorrect: false,\n      blurOnSubmit: false,\n      clearButtonMode: \"never\",\n      autoCapitalize: \"characters\",\n      underlineColorAndroid: \"transparent\",\n      maxLength: cellCount\n    }, rest), {}, {\n      value: value,\n      onBlur: focusState.onBlur,\n      onFocus: focusState.onFocus,\n      style: getStyle(styles.textInput, textInputStyle),\n      ref: ref\n    }))]\n  }));\n}\n\nexport var CodeField = React.forwardRef(CodeFieldComponent);","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/node_modules/react-native-confirmation-code-field/esm/CodeField.js"],"names":["React","getStyle","getSymbols","useFocusState","styles","DEFAULT_CELL_COUNT","CodeFieldComponent","ref","rootStyle","textInputStyle","onBlur","onFocus","value","renderCell","cellCount","RootProps","RootComponent","View","rest","focusState","cells","map","symbol","index","symbols","isFirstEmptySymbol","indexOf","isFocused","root","textInput","CodeField","forwardRef"],"mappings":";;;;;;;;;;AACA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,QAAR,EAAkBC,UAAlB;AACA,SAAQC,aAAR;AACA,SAAQC,MAAR;;;AACA,IAAMC,kBAAkB,GAAG,CAA3B;;AACA,SAASC,kBAAT,OAaEC,GAbF,EAcE;AAAA,MAZEC,SAYF,QAZEA,SAYF;AAAA,MAXEC,cAWF,QAXEA,cAWF;AAAA,MAVEC,MAUF,QAVEA,MAUF;AAAA,MATEC,OASF,QATEA,OASF;AAAA,MAREC,KAQF,QAREA,KAQF;AAAA,MAPEC,UAOF,QAPEA,UAOF;AAAA,4BANEC,SAMF;AAAA,MANEA,SAMF,+BANcT,kBAMd;AAAA,4BALEU,SAKF;AAAA,MALEA,SAKF,+BALc,EAKd;AAAA,gCAJEC,aAIF;AAAA,MAJEA,aAIF,mCAJkBC,IAIlB;AAAA,MAHKC,IAGL;;AACA,MAAMC,UAAU,GAAGhB,aAAa,CAACO,MAAD,EAASC,OAAT,CAAhC;AACA,MAAMS,KAAK,GAAGlB,UAAU,CAACU,KAAK,IAAI,EAAV,EAAcE,SAAd,CAAV,CAAmCO,GAAnC,CACZ,UAACC,MAAD,EAASC,KAAT,EAAgBC,OAAhB,EAA4B;AAC1B,QAAMC,kBAAkB,GAAGD,OAAO,CAACE,OAAR,CAAgB,EAAhB,MAAwBH,KAAnD;AACA,WAAOV,UAAU,CAAC;AAChBU,MAAAA,KAAK,EAALA,KADgB;AAEhBD,MAAAA,MAAM,EAANA,MAFgB;AAGhBK,MAAAA,SAAS,EAAER,UAAU,CAACQ,SAAX,IAAwBF;AAHnB,KAAD,CAAjB;AAKD,GARW,CAAd;AAUA,SACE,MAAC,aAAD,kCAAmBV,SAAnB;AAA8B,IAAA,KAAK,EAAEd,QAAQ,CAACG,MAAM,CAACwB,IAAR,EAAcpB,SAAd,CAA7C;AAAA,eACGY,KADH,EAEE,KAAC,SAAD;AACE,MAAA,mBAAmB,MADrB;AAIE,MAAA,WAAW,EAAE,IAJf;AAKE,MAAA,UAAU,EAAE,KALd;AAME,MAAA,WAAW,EAAE,KANf;AAOE,MAAA,YAAY,EAAE,KAPhB;AAQE,MAAA,eAAe,EAAC,OARlB;AASE,MAAA,cAAc,EAAC,YATjB;AAUE,MAAA,qBAAqB,EAAC,aAVxB;AAWE,MAAA,SAAS,EAAEN;AAXb,OAYMI,IAZN;AAaE,MAAA,KAAK,EAAEN,KAbT;AAcE,MAAA,MAAM,EAAEO,UAAU,CAACT,MAdrB;AAeE,MAAA,OAAO,EAAES,UAAU,CAACR,OAftB;AAgBE,MAAA,KAAK,EAAEV,QAAQ,CAACG,MAAM,CAACyB,SAAR,EAAmBpB,cAAnB,CAhBjB;AAiBE,MAAA,GAAG,EAAEF;AAjBP,OAFF;AAAA,KADF;AAwBD;;AACD,OAAO,IAAMuB,SAAS,GAAG9B,KAAK,CAAC+B,UAAN,CAAiBzB,kBAAjB,CAAlB","sourcesContent":["import {TextInput, View} from 'react-native';\nimport React from 'react';\nimport {getStyle, getSymbols} from './utils';\nimport {useFocusState} from './useFocusState';\nimport {styles} from './CodeField.styles';\nconst DEFAULT_CELL_COUNT = 4;\nfunction CodeFieldComponent(\n  {\n    rootStyle,\n    textInputStyle,\n    onBlur,\n    onFocus,\n    value,\n    renderCell,\n    cellCount = DEFAULT_CELL_COUNT,\n    RootProps = {},\n    RootComponent = View,\n    ...rest\n  },\n  ref,\n) {\n  const focusState = useFocusState(onBlur, onFocus);\n  const cells = getSymbols(value || '', cellCount).map(\n    (symbol, index, symbols) => {\n      const isFirstEmptySymbol = symbols.indexOf('') === index;\n      return renderCell({\n        index,\n        symbol,\n        isFocused: focusState.isFocused && isFirstEmptySymbol,\n      });\n    },\n  );\n  return (\n    <RootComponent {...RootProps} style={getStyle(styles.root, rootStyle)}>\n      {cells}\n      <TextInput\n        disableFullscreenUI\n        // Use `caretHidden={false}` when `value={''}` and user can't paste\\copy text because menu doesn't appear\n        // See more: https://github.com/retyui/react-native-confirmation-code-field/issues/140\n        caretHidden={true}\n        spellCheck={false}\n        autoCorrect={false}\n        blurOnSubmit={false}\n        clearButtonMode=\"never\"\n        autoCapitalize=\"characters\"\n        underlineColorAndroid=\"transparent\"\n        maxLength={cellCount}\n        {...rest}\n        value={value}\n        onBlur={focusState.onBlur}\n        onFocus={focusState.onFocus}\n        style={getStyle(styles.textInput, textInputStyle)}\n        ref={ref}\n      />\n    </RootComponent>\n  );\n}\nexport const CodeField = React.forwardRef(CodeFieldComponent);\n"]},"metadata":{},"sourceType":"module"}