{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport { LoginPanel } from \"./subScreens/forgotPassword.js\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nimport SplashScreen from \"./subScreens/SplashScreen.js\";\nimport Rakkas from \"../assets/fonts/fonts.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var image = require(\"../assets/images/backgroundCars.jpg\");\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setisLoading = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setisLoading(false);\n    }, 1000);\n  }, [navigation]);\n\n  var KeyboardDismiss = function KeyboardDismiss(_ref2) {\n    var children = _ref2.children;\n    return _jsx(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      },\n      children: children\n    });\n  };\n\n  var _useFonts = useFonts({\n    Rakkas: Rakkas\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    _jsx(SplashScreen, {});\n  }\n\n  return _jsx(_Fragment, {\n    children: isLoading === true ? _jsx(SplashScreen, {}) : _jsx(KeyboardDismiss, {\n      children: _jsxs(View, {\n        style: styles.mainContainer,\n        children: [_jsx(StatusBar, {\n          translucent: true,\n          backgroundColor: \"transparent\"\n        }), _jsx(ImageBackground, {\n          source: image,\n          style: styles.backgroundImage,\n          resizeMode: \"cover\",\n          children: _jsx(LoginPanel, {\n            name: \"LoginPanel\",\n            navigation: navigation\n          })\n        })]\n      })\n    })\n  });\n}\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    position: \"relative\",\n    flex: 1,\n    elevation: 4,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#FFCC56\"\n  },\n  backgroundImage: {\n    flex: 1,\n    width: width * 1,\n    height: height * 0.6,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/Home.js"],"names":["React","useState","useEffect","StatusBar","useFonts","LoginPanel","SplashScreen","Rakkas","Home","navigation","image","require","isLoading","setisLoading","setTimeout","KeyboardDismiss","children","Keyboard","dismiss","loaded","styles","mainContainer","backgroundImage","width","Dimensions","get","height","StyleSheet","create","position","flex","elevation","backgroundColor","alignItems","justifyContent"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA4C,OAA5C;AACA,OAAO,8BAAP;AACA,SAASC,SAAT,QAA0B,iBAA1B;AACA,SAASC,QAAT,QAAyB,WAAzB;AACA,SAAQC,UAAR;;;;;;;AAKA,OAAOC,YAAP;AACA,OAAOC,MAAP;;;;AAGA,eAAe,SAASC,IAAT,OAA4B;AAAA,MAAbC,UAAa,QAAbA,UAAa;;AAIvC,MAAMC,KAAK,GAAGC,OAAO,uCAArB;;AAGA,kBAAkCV,QAAQ,CAAC,IAAD,CAA1C;AAAA;AAAA,MAAOW,SAAP;AAAA,MAAkBC,YAAlB;;AAGAX,EAAAA,SAAS,CAAC,YAAM;AACZY,IAAAA,UAAU,CAAC,YAAM;AACbD,MAAAA,YAAY,CAAC,KAAD,CAAZ;AACH,KAFS,EAEP,IAFO,CAAV;AAGH,GAJQ,EAIN,CAACJ,UAAD,CAJM,CAAT;;AAOA,MAAMM,eAAe,GAAG,SAAlBA,eAAkB;AAAA,QAAGC,QAAH,SAAGA,QAAH;AAAA,WACpB,KAAC,wBAAD;AAA0B,MAAA,OAAO,EAAK;AAAA,eAAKC,QAAQ,CAACC,OAAT,EAAL;AAAA,OAAtC;AAAA,gBACMF;AADN,MADoB;AAAA,GAAxB;;AAOA,kBAAgBZ,QAAQ,CAAC;AACrBG,IAAAA,MAAM,EAAEA;AADa,GAAD,CAAxB;AAAA;AAAA,MAAMY,MAAN;;AAGA,MAAI,CAACA,MAAL,EAAa;AACT,SAAC,YAAD;AACH;;AACD,SACI;AAAA,cACCP,SAAS,KAAK,IAAd,GACC,KAAC,YAAD,KADD,GAKD,KAAC,eAAD;AAAA,gBAEA,MAAC,IAAD;AAAM,QAAA,KAAK,EAAEQ,MAAM,CAACC,aAApB;AAAA,mBACI,KAAC,SAAD;AAAW,UAAA,WAAW,EAAE,IAAxB;AAA8B,UAAA,eAAe,EAAC;AAA9C,UADJ,EAGI,KAAC,eAAD;AAAiB,UAAA,MAAM,EAAEX,KAAzB;AAAgC,UAAA,KAAK,EAAEU,MAAM,CAACE,eAA9C;AAA+D,UAAA,UAAU,EAAC,OAA1E;AAAA,oBAEI,KAAC,UAAD;AAAY,YAAA,IAAI,EAAC,YAAjB;AAA8B,YAAA,UAAU,EAAEb;AAA1C;AAFJ,UAHJ;AAAA;AAFA;AANA,IADJ;AAuBH;AAGA,IAAMc,KAAK,GAAGC,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBF,KAAvC;AACA,IAAMG,MAAM,GAAGF,UAAU,CAACC,GAAX,CAAe,QAAf,EAAyBC,MAAxC;AAED,IAAMN,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAE7BP,EAAAA,aAAa,EAAE;AACXQ,IAAAA,QAAQ,EAAC,UADE;AAEXC,IAAAA,IAAI,EAAE,CAFK;AAGXC,IAAAA,SAAS,EAAC,CAHC;AAIXR,IAAAA,KAAK,EAAE,MAJI;AAKXG,IAAAA,MAAM,EAAE,MALG;AAMXM,IAAAA,eAAe,EAAE;AANN,GAFc;AAW7BV,EAAAA,eAAe,EAAC;AACZQ,IAAAA,IAAI,EAAE,CADM;AAEZP,IAAAA,KAAK,EAAEA,KAAK,GAAG,CAFH;AAGZG,IAAAA,MAAM,EAAEA,MAAM,GAAG,GAHL;AAIZO,IAAAA,UAAU,EAAE,QAJA;AAKZC,IAAAA,cAAc,EAAE;AALJ;AAXa,CAAlB,CAAf","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font'\nimport{ LoginPanel } from './subScreens/forgotPassword.js';\n\nimport { ImageBackground, Dimensions, View, \n        StyleSheet,  Keyboard, TouchableWithoutFeedback,\n         } from 'react-native';\nimport SplashScreen from './subScreens/SplashScreen.js';\nimport Rakkas from '../assets/fonts/fonts.js'\n         \n\nexport default function Home({navigation}) {\n\n    \n    // Main page background image path\n    const image = require('../assets/images/backgroundCars.jpg')\n    \n    //isLoading page\n    const [isLoading, setisLoading] = useState(true)\n    \n    \n    useEffect(() => {\n        setTimeout(() => {\n            setisLoading(false)\n        }, 1000);\n    }, [navigation])\n    \n    // Closes the keyboard when clicking anywhere other than input\n    const KeyboardDismiss = ({ children }) => (\n        <TouchableWithoutFeedback onPress = { ()=> Keyboard.dismiss() }>\n            { children }\n        </TouchableWithoutFeedback>\n    );\n    \n    //Fonts define\n    const[loaded] = useFonts({\n        Rakkas: Rakkas\n    })\n    if (!loaded) {\n        <SplashScreen/>\n    }\n    return (\n        <>\n        {isLoading === true ? \n        ( <SplashScreen/> \n        \n        ):(\n\n        <KeyboardDismiss>\n\n        <View style={styles.mainContainer}>\n            <StatusBar translucent={true} backgroundColor=\"transparent\"/>\n\n            <ImageBackground source={image} style={styles.backgroundImage} resizeMode=\"cover\">\n         \n                <LoginPanel name='LoginPanel' navigation={navigation}/>\n\n            </ImageBackground>\n        </View>\n        </KeyboardDismiss> \n        \n        )}\n        </>\n    )\n}\n\n //Get screen height and width for responsive\n const width = Dimensions.get('window').width;\n const height = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n\n    mainContainer :{\n        position:\"relative\",\n        flex: 1,\n        elevation:4,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"#FFCC56\"\n    },\n\n    backgroundImage:{\n        flex: 1,\n        width: width * 1,\n        height: height * 0.6,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n\n})"]},"metadata":{},"sourceType":"module"}