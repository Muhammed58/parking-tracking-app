{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { useFonts } from 'expo-font';\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport openMap from 'react-native-open-maps';\nimport GoBackButton from \"./subScreens/GoBackButton.js\";\nimport { ErrorPage } from \"./subScreens/ErrorPage.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport SplashScreen from \"./subScreens/SplashScreen.js\";\nimport Rakkas from \"../assets/fonts/fonts.js\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nexport default function ParkHere(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var openAppleMapHandler = function openAppleMapHandler() {\n    openMap({\n      query: route.params.latitude + \", \" + route.params.longitude,\n      provider: \"apple\"\n    }, {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude\n    });\n  };\n\n  var openGoogleMapHandler = function openGoogleMapHandler() {\n    openMap({\n      query: route.params.latitude + \", \" + route.params.longitude,\n      provider: \"google\"\n    }, {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseMap = _useState2[0],\n      setChooseMap = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      errorMessage = _useState4[0],\n      setErrorMessage = _useState4[1];\n\n  var _useState5 = useState('Error message'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      errorMessageText = _useState6[0],\n      setErrorMessageText = _useState6[1];\n\n  useEffect(function () {\n    if (route.params.latitude === undefined) {\n      setErrorMessage(true);\n      setErrorMessageText('Location Not Found!');\n      setTimeout(function () {\n        return navigation.navigate('MainPage', {\n          params: true\n        });\n      }, 1000);\n    }\n  }, []);\n\n  var _useFonts = useFonts({\n    Rakkas: Rakkas\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    _jsx(SplashScreen, {});\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: {\n        latitude: route.params.latitude || 37.78825,\n        longitude: route.params.longitude || -122.4324,\n        latitudeDelta: 0.0922,\n        longitudeDelta: 0.0421\n      },\n      children: route.params.latitude !== undefined && _jsx(Marker, {\n        coordinate: {\n          latitude: route.params.latitude,\n          longitude: route.params.longitude\n        }\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            height: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.openMapContainer, {\n          display: chooseMap ? \"none\" : \"flex\",\n          elevation: chooseMap ? -1 : 1\n        }]];\n      },\n      onPress: function onPress() {\n        return setChooseMap(true);\n      },\n      children: _jsx(Text, {\n        style: styles.openMapContainerText,\n        children: \"Start Navigation\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            height: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.openAppleMapContainer, {\n          display: !chooseMap ? \"none\" : \"flex\",\n          elevation: !chooseMap ? -1 : 1\n        }]];\n      },\n      onPress: openAppleMapHandler,\n      children: _jsx(Text, {\n        style: styles.openAppleMapContainerText,\n        children: \"Apple Map?\"\n      })\n    }), _jsx(Pressable, {\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            height: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.openGoogleMapContainer, {\n          display: !chooseMap ? \"none\" : \"flex\",\n          elevation: !chooseMap ? -1 : 1\n        }]];\n      },\n      onPress: openGoogleMapHandler,\n      children: _jsx(Text, {\n        style: styles.openGoogleMapContainerText,\n        children: \"Google Map?\"\n      })\n    }), errorMessage && _jsx(ErrorPage, {\n      errorMessage: errorMessageText\n    }), _jsx(GoBackButton, {})]\n  });\n}\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: \"relative\"\n  },\n  map: {\n    width: width,\n    height: height,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openMapContainer: {\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  },\n  openAppleMapContainer: {\n    display: \"none\",\n    position: \"absolute\",\n    top: height * 0.7,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openAppleMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  },\n  openGoogleMapContainer: {\n    display: \"none\",\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openGoogleMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  }\n});","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/CurrentParking.js"],"names":["React","useState","useEffect","useFonts","MapView","PROVIDER_GOOGLE","Marker","openMap","GoBackButton","ErrorPage","SplashScreen","Rakkas","ParkHere","route","navigation","openAppleMapHandler","query","params","latitude","longitude","provider","openGoogleMapHandler","chooseMap","setChooseMap","errorMessage","setErrorMessage","errorMessageText","setErrorMessageText","undefined","setTimeout","navigate","loaded","styles","container","map","latitudeDelta","longitudeDelta","pressed","shadowColor","shadowRadius","shadowOpacity","shadowOffset","width","height","transform","translateY","openMapContainer","display","elevation","openMapContainerText","openAppleMapContainer","openAppleMapContainerText","openGoogleMapContainer","openGoogleMapContainerText","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","top","left","borderRadius","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport { useFonts } from 'expo-font'\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\nimport openMap from 'react-native-open-maps'\nimport GoBackButton from './subScreens/GoBackButton.js'\nimport { ErrorPage } from './subScreens/ErrorPage.js';\n\nimport {View, Text, StyleSheet, \n    Dimensions, Pressable,\n} from 'react-native'\nimport SplashScreen from './subScreens/SplashScreen.js';\nimport Rakkas from '../assets/fonts/fonts.js'\n\n\n\nexport default function ParkHere({route,navigation}){\n\n    // START APPLE NAVIGATION ONPRESS HANDLER\n    const openAppleMapHandler = () =>{\n        openMap( {query:`${route.params.latitude}, ${route.params.longitude}`, provider:\"apple\" }, {latitude: route.params.latitude, longitude: route.params.longitude})\n    }\n\n    // START GOOGLE NAVIGATION ONPRESS HANDLER\n    const openGoogleMapHandler = () =>{\n        openMap( {query:`${route.params.latitude}, ${route.params.longitude}`, provider:\"google\" }, {latitude: route.params.latitude, longitude: route.params.longitude})\n    }\n\n    // DISPLAY APPLE MAPS OR GOOGLE MAPS OPTIONS\n    const [chooseMap, setChooseMap] = useState(false)\n\n    //HANDLE ERROR MESSAGES\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [errorMessageText, setErrorMessageText] = useState('Error message')\n\n   \n    // NAVIGATE TO MAIN PAGE IF THERE IS NO AVAILABLE CURRENT LOCATION INFO\n    useEffect(() => {\n        if(route.params.latitude === undefined){\n            setErrorMessage(true)\n            setErrorMessageText('Location Not Found!')\n            setTimeout(() => navigation.navigate('MainPage',{params:true}), 1000);\n        }\n    }, [])\n\n\n    //FONT DEFINE\n    const[loaded] = useFonts({\n        Rakkas: Rakkas\n    })\n\n    //RENDER AFTER FONT LOADED\n    if (!loaded) {\n        <SplashScreen/>\n    }\n  return (\n\n    <View style={styles.container}>\n          <MapView style={styles.map}\n                provider={PROVIDER_GOOGLE}\n                initialRegion={{\n                    latitude: route.params.latitude || 37.78825,\n                    longitude: route.params.longitude ||-122.4324,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421}}\n                    >\n                {route.params.latitude !== undefined &&\n                <Marker coordinate={{latitude:route.params.latitude, \n                    longitude:route.params.longitude}}/>\n                }\n            </MapView>\n           \n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openMapContainer,  {display: chooseMap ? \"none\" : \"flex\",\n                                                elevation: chooseMap ? -1 : 1}]]}\n                onPress={()=>setChooseMap(true)}\n                >\n                    <Text style={styles.openMapContainerText}>Start Navigation</Text>\n                </Pressable>\n\n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openAppleMapContainer, {display: !chooseMap? \"none\" : \"flex\", \n                                                elevation: !chooseMap ? -1 : 1}]]}\n                onPress={openAppleMapHandler}\n                >\n                    <Text style={styles.openAppleMapContainerText}>Apple Map?</Text>\n                </Pressable>\n\n          \n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openGoogleMapContainer,  {display: !chooseMap? \"none\" : \"flex\", \n                                                    elevation: !chooseMap ? -1 : 1}]]}\n                onPress={openGoogleMapHandler}\n                >\n                    <Text style={styles.openGoogleMapContainerText}>Google Map?</Text>\n                </Pressable>\n                \n                { errorMessage && <ErrorPage errorMessage={errorMessageText}/>}\n           \n                <GoBackButton/>\n               \n    </View>\n  )\n}\n\n//Get screen height and width for responsive\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position:\"relative\",\n    },\n\n    map:{\n        width: width,\n        height: height,\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openMapContainer:{\n        position:\"absolute\",\n        top: height *0.8,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n    openAppleMapContainer:{\n        display: \"none\",\n        position:\"absolute\",\n        top: height *0.7,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openAppleMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n    openGoogleMapContainer:{\n        display:\"none\",\n        position:\"absolute\",\n        top: height *0.8,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openGoogleMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}