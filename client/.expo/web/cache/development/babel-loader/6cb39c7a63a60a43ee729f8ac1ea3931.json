{"ast":null,"code":"import _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nimport { ContinousBaseGesture } from \"./gesture\";\nexport var PinchGesture = function (_ContinousBaseGesture) {\n  _inherits(PinchGesture, _ContinousBaseGesture);\n\n  var _super = _createSuper(PinchGesture);\n\n  function PinchGesture() {\n    var _this;\n\n    _classCallCheck(this, PinchGesture);\n\n    _this = _super.call(this);\n    _this.handlerName = 'PinchGestureHandler';\n    return _this;\n  }\n\n  return _createClass(PinchGesture);\n}(ContinousBaseGesture);","map":{"version":3,"sources":["pinchGesture.ts"],"names":["constructor"],"mappings":";;;;;;;;;;AAAA,SAAA,oBAAA;AAGA,WAAO,YAAP;AAAA;;AAAA;;AACEA,0BAAc;AAAA;;AAAA;;AACZ;AAEA,UAAA,WAAA,GAAA,qBAAA;AAHY;AAIb;;AALH;AAAA,EAAO,oBAAP","sourcesContent":["import { ContinousBaseGesture } from './gesture';\nimport { PinchGestureHandlerEventPayload } from '../PinchGestureHandler';\n\nexport class PinchGesture extends ContinousBaseGesture<PinchGestureHandlerEventPayload> {\n  constructor() {\n    super();\n\n    this.handlerName = 'PinchGestureHandler';\n  }\n}\n\nexport type PinchGestureType = InstanceType<typeof PinchGesture>;\n"]},"metadata":{},"sourceType":"module"}