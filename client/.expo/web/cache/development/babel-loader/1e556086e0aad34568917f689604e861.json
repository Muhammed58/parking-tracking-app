{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport { useFonts } from 'expo-font';\nimport { faCaretLeft } from '@fortawesome/free-solid-svg-icons';\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome';\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport openMap from 'react-native-open-maps';\nimport GoBackButton from \"./subScreens/GoBackButton.js\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nexport default function ParkHere(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    Rakkas: require(\"../assets/fonts/Rakkas-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var openAppleMapHandler = function openAppleMapHandler() {\n    openMap({\n      query: route.params.latitude + \", \" + route.params.longitude,\n      provider: \"apple\"\n    }, {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude\n    });\n  };\n\n  var openGoogleMapHandler = function openGoogleMapHandler() {\n    openMap({\n      query: route.params.latitude + \", \" + route.params.longitude,\n      provider: \"google\"\n    }, {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude\n    });\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      chooseMap = _useState2[0],\n      setChooseMap = _useState2[1];\n\n  if (!loaded) {\n    return null;\n  }\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(MapView, {\n    style: styles.map,\n    provider: PROVIDER_GOOGLE,\n    initialRegion: {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude,\n      latitudeDelta: 0.0922,\n      longitudeDelta: 0.0421\n    }\n  }, React.createElement(Marker, {\n    coordinate: {\n      latitude: route.params.latitude,\n      longitude: route.params.longitude\n    }\n  })), React.createElement(GoBackButton, null), React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        shadowColor: \"black\",\n        shadowRadius: 2,\n        shadowOpacity: pressed ? 0.1 : 0.9,\n        shadowOffset: pressed ? {\n          width: 0,\n          height: 1\n        } : {\n          width: 0,\n          height: 3\n        },\n        transform: [pressed ? {\n          translateY: 10\n        } : {\n          translateY: 0\n        }]\n      }, [styles.openMapContainer, {\n        display: chooseMap ? \"none\" : \"flex\",\n        elevation: chooseMap ? -1 : 1\n      }]];\n    },\n    onPress: function onPress() {\n      return setChooseMap(true);\n    }\n  }, React.createElement(Text, {\n    style: styles.openMapContainerText\n  }, \"Start Navigation\")), React.createElement(Pressable, {\n    style: function style(_ref3) {\n      var pressed = _ref3.pressed;\n      return [{\n        shadowColor: \"black\",\n        shadowRadius: 2,\n        shadowOpacity: pressed ? 0.1 : 0.9,\n        shadowOffset: pressed ? {\n          width: 0,\n          height: 1\n        } : {\n          width: 0,\n          height: 3\n        },\n        transform: [pressed ? {\n          translateY: 10\n        } : {\n          translateY: 0\n        }]\n      }, [styles.openAppleMapContainer, {\n        display: !chooseMap ? \"none\" : \"flex\",\n        elevation: !chooseMap ? -1 : 1\n      }]];\n    },\n    onPress: openAppleMapHandler\n  }, React.createElement(Text, {\n    style: styles.openAppleMapContainerText\n  }, \"Apple Map?\")), React.createElement(Pressable, {\n    style: function style(_ref4) {\n      var pressed = _ref4.pressed;\n      return [{\n        shadowColor: \"black\",\n        shadowRadius: 2,\n        shadowOpacity: pressed ? 0.1 : 0.9,\n        shadowOffset: pressed ? {\n          width: 0,\n          height: 1\n        } : {\n          width: 0,\n          height: 3\n        },\n        transform: [pressed ? {\n          translateY: 10\n        } : {\n          translateY: 0\n        }]\n      }, [styles.openGoogleMapContainer, {\n        display: !chooseMap ? \"none\" : \"flex\",\n        elevation: !chooseMap ? -1 : 1\n      }]];\n    },\n    onPress: openGoogleMapHandler\n  }, React.createElement(Text, {\n    style: styles.openGoogleMapContainerText\n  }, \"Google Map?\")));\n}\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: \"relative\"\n  },\n  map: {\n    width: width,\n    height: height,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openMapContainer: {\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  },\n  openAppleMapContainer: {\n    display: \"none\",\n    position: \"absolute\",\n    top: height * 0.7,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openAppleMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  },\n  openGoogleMapContainer: {\n    display: \"none\",\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  openGoogleMapContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  }\n});","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/CurrentParking.js"],"names":["React","useState","useEffect","axios","useFonts","faCaretLeft","FontAwesomeIcon","MapView","PROVIDER_GOOGLE","Marker","openMap","GoBackButton","ParkHere","route","navigation","Rakkas","require","loaded","openAppleMapHandler","query","params","latitude","longitude","provider","openGoogleMapHandler","chooseMap","setChooseMap","styles","container","map","latitudeDelta","longitudeDelta","pressed","shadowColor","shadowRadius","shadowOpacity","shadowOffset","width","height","transform","translateY","openMapContainer","display","elevation","openMapContainerText","openAppleMapContainer","openAppleMapContainerText","openGoogleMapContainer","openGoogleMapContainerText","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","top","left","borderRadius","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport { useFonts } from 'expo-font'\nimport { faCaretLeft } from '@fortawesome/free-solid-svg-icons'\nimport { FontAwesomeIcon } from '@fortawesome/react-native-fontawesome'\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\nimport openMap from 'react-native-open-maps'\nimport GoBackButton from './subScreens/GoBackButton.js'\n\nimport {View, Text, StyleSheet, \n    Dimensions, Pressable,\n} from 'react-native'\n\n\n\n\nexport default function ParkHere({route,navigation}){\n\n    //Fonts define\n    const[loaded] = useFonts({\n        Rakkas: require('../assets/fonts/Rakkas-Regular.ttf')\n    })\n\n    \n    /* Start Apple Navigation onPress Handler */\n    const openAppleMapHandler = () =>{\n        openMap( {query:`${route.params.latitude}, ${route.params.longitude}`, provider:\"apple\" }, {latitude: route.params.latitude, longitude: route.params.longitude})\n    }\n\n    /* Start Google Navigation onPress Handler */\n    const openGoogleMapHandler = () =>{\n        openMap( {query:`${route.params.latitude}, ${route.params.longitude}`, provider:\"google\" }, {latitude: route.params.latitude, longitude: route.params.longitude})\n    }\n\n    const [chooseMap, setChooseMap] = useState(false)\n\n\n     //If font loaded then render component\n     if (!loaded) {\n        return null;\n    }\n  return (\n\n    <View style={styles.container}>\n          <MapView style={styles.map}\n                provider={PROVIDER_GOOGLE}\n                initialRegion={{\n                    latitude: route.params.latitude,\n                    longitude: route.params.longitude,\n                    latitudeDelta: 0.0922,\n                    longitudeDelta: 0.0421}}\n                    >\n\n                <Marker coordinate={{latitude:route.params.latitude, \n                                    longitude:route.params.longitude}}/>\n            </MapView>\n\n            {/* Go back to the Main Page */}\n                <GoBackButton/>\n\n            {/* Open navigation */}\n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openMapContainer,  {display: chooseMap ? \"none\" : \"flex\",\n                                                elevation: chooseMap ? -1 : 1}]]}\n                onPress={()=>setChooseMap(true)}\n                >\n                    <Text style={styles.openMapContainerText}>Start Navigation</Text>\n                </Pressable>\n\n            {/* Open Apple Map navigation */}\n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openAppleMapContainer, {display: !chooseMap? \"none\" : \"flex\", \n                                                elevation: !chooseMap ? -1 : 1}]]}\n                onPress={openAppleMapHandler}\n                >\n                    <Text style={styles.openAppleMapContainerText}>Apple Map?</Text>\n                </Pressable>\n\n            {/* Open Google Map navigation */}\n            <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.openGoogleMapContainer,  {display: !chooseMap? \"none\" : \"flex\", \n                                                    elevation: !chooseMap ? -1 : 1}]]}\n                onPress={openGoogleMapHandler}\n                >\n                    <Text style={styles.openGoogleMapContainerText}>Google Map?</Text>\n                </Pressable>\n    </View>\n  )\n}\n\n//Get screen height and width for responsive\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position:\"relative\",\n    },\n\n    map:{\n        width: width,\n        height: height,\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openMapContainer:{\n        position:\"absolute\",\n        top: height *0.8,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n    openAppleMapContainer:{\n        display: \"none\",\n        position:\"absolute\",\n        top: height *0.7,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openAppleMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n    openGoogleMapContainer:{\n        display:\"none\",\n        position:\"absolute\",\n        top: height *0.8,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    openGoogleMapContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n})\n"]},"metadata":{},"sourceType":"module"}