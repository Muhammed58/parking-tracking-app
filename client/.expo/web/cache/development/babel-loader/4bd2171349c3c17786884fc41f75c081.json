{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React from 'react';\nimport GoBackButton from \"./subScreens/GoBackButton\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Image from \"react-native-web/dist/exports/Image\";\nimport SplashScreen from \"./subScreens/SplashScreen\";\nimport Rakkas from \"../assets/fonts/fonts.js\";\nimport { useFonts } from 'expo-font';\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nvar labels = [\"name\", \"email\", \"number of Parking\"];\nvar inputBoxSizes = [0.45, 0.57, 0.69, 0.81];\nvar labelSizes = [0.4, 0.52, 0.64, 0.76];\n\nvar ProfilePage = function ProfilePage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var vectorBackground = require(\"../assets/images/vector.png\");\n\n  var userCircleIcon = require(\"../assets/images/user.png\");\n\n  var _useFonts = useFonts({\n    Rakkas: Rakkas\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    _jsx(SplashScreen, {});\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(Image, {\n      style: styles.vectorBackground,\n      source: vectorBackground\n    }), _jsx(View, {\n      style: styles.userNameContainer,\n      children: _jsx(Text, {\n        style: styles.userNameText,\n        children: route.params.props.profile.name\n      })\n    }), _jsx(View, {\n      style: styles.userCircleIconContainer,\n      children: _jsx(Image, {\n        source: userCircleIcon,\n        style: styles.userIcon\n      })\n    }), labels.map(function (value, index) {\n      return _jsx(React.Fragment, {\n        children: index === 2 ? _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputLabels, {\n              top: height * labelSizes[index]\n            }],\n            children: _jsx(Text, {\n              style: styles.inputLabelText,\n              children: value[0].toUpperCase() + value.substring(1)\n            })\n          }), _jsx(TextInput, {\n            autoCapitalize: \"words\",\n            editable: false,\n            style: [styles.inputBoxes, {\n              top: height * inputBoxSizes[index]\n            }],\n            children: route.params.props.locationList.length\n          })]\n        }) : _jsxs(_Fragment, {\n          children: [_jsx(View, {\n            style: [styles.inputLabels, {\n              top: height * labelSizes[index]\n            }],\n            children: _jsx(Text, {\n              style: styles.inputLabelText,\n              children: value[0].toUpperCase() + value.substring(1)\n            })\n          }), _jsx(TextInput, {\n            autoCapitalize: \"words\",\n            editable: false,\n            style: [styles.inputBoxes, {\n              top: height * inputBoxSizes[index]\n            }],\n            children: Object.values(route.params.props.profile)[index + 1]\n          })]\n        })\n      }, index);\n    }), _jsx(GoBackButton, {})]\n  });\n};\n\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: '#FFCC56',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: \"relative\"\n  },\n  inputBoxes: {\n    position: \"absolute\",\n    width: width * 0.7,\n    height: height * 0.06,\n    textAlign: \"center\",\n    fontSize: width * 0.04,\n    fontFamily: \"Rakkas\",\n    backgroundColor: \"white\",\n    color: \"black\",\n    borderWidth: 1,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowRadius: 2,\n    shadowOpacity: 0.9,\n    shadowOffset: {\n      width: 1,\n      height: 3\n    }\n  },\n  inputLabels: {\n    position: \"absolute\",\n    padding: 10,\n    left: width * 0.16,\n    borderTopStartRadius: 10,\n    borderTopEndRadius: 10\n  },\n  inputLabelText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.05\n  },\n  updateProfile: {\n    position: \"absolute\",\n    backgroundColor: \"tomato\",\n    top: height * 0.9,\n    width: width * 0.7,\n    height: height * 0.06,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15\n  },\n  updateProfileText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.05,\n    color: \"white\"\n  },\n  vectorBackground: {\n    position: 'absolute',\n    width: width * 1.5,\n    height: height * 0.75,\n    top: height * -0.3,\n    left: width * -0.01\n  },\n  userCircleIconContainer: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: '#ECECEC',\n    top: height * 0.16,\n    left: width * 0.5,\n    width: 160,\n    height: 160,\n    borderWidth: 7,\n    overflow: \"hidden\",\n    borderRadius: 100\n  },\n  userIcon: {\n    position: \"absolute\",\n    width: width * 0.28,\n    height: height * 0.17,\n    top: height * 0.034\n  },\n  userNameContainer: {\n    position: \"absolute\",\n    width: width * 0.4,\n    height: height * 0.15,\n    top: height * 0.12,\n    left: width * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"gray\",\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    shadowOffset: {\n      width: 1,\n      height: 6\n    },\n    justifyContent: \"center\"\n  },\n  userNameText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.07,\n    textAlign: \"center\"\n  }\n});\nexport default ProfilePage;","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/ProfilePage.js"],"names":["React","GoBackButton","SplashScreen","Rakkas","useFonts","labels","inputBoxSizes","labelSizes","ProfilePage","route","navigation","vectorBackground","require","userCircleIcon","loaded","styles","container","userNameContainer","userNameText","params","props","profile","name","userCircleIconContainer","userIcon","map","value","index","inputLabels","top","height","inputLabelText","toUpperCase","substring","inputBoxes","locationList","length","Object","values","width","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","textAlign","fontSize","fontFamily","color","borderWidth","borderRadius","shadowColor","shadowRadius","shadowOpacity","shadowOffset","padding","left","borderTopStartRadius","borderTopEndRadius","updateProfile","updateProfileText","overflow"],"mappings":"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","sourcesContent":["import React from 'react'\nimport GoBackButton from './subScreens/GoBackButton'\nimport {View, Text, Dimensions, StyleSheet, TextInput, Image} from 'react-native'\nimport SplashScreen from './subScreens/SplashScreen'\nimport Rakkas from '../assets/fonts/fonts.js'\nimport { useFonts } from 'expo-font'\n\n\nconst labels =[\"name\", \"email\",\"number of Parking\"]\nconst inputBoxSizes =[ 0.45, 0.57, 0.69, 0.81  ]\nconst labelSizes =[ 0.4, 0.52, 0.64, 0.76]\n\nconst ProfilePage = ({route, navigation}) => {\n\n    const vectorBackground = require('../assets/images/vector.png')\n    const userCircleIcon = require('../assets/images/user.png')\n    \n    //Fonts define\n let [loaded] = useFonts({\n   Rakkas: Rakkas\n })\n    if(!loaded){\n        <SplashScreen/>\n    }\n  return (\n      <View style={styles.container}>\n          \n        <Image style={styles.vectorBackground} \n                source={vectorBackground}/>\n\n        <View style={styles.userNameContainer}>\n            <Text style={styles.userNameText}>{route.params.props.profile.name}</Text>\n        </View>\n\n        <View style={styles.userCircleIconContainer}>\n            <Image source={userCircleIcon} style={styles.userIcon}/>\n        </View>\n        {labels.map((value,index)=>{\n            return(\n                <React.Fragment key={index}>\n                    {index === 2 ? (\n                        <>\n                        <View style={[styles.inputLabels, { top: height * labelSizes[index]}]}>\n                            <Text style={styles.inputLabelText}>{value[0].toUpperCase() + value.substring(1)}</Text>\n                        </View>\n                        <TextInput autoCapitalize='words' editable={false}\n                                    style={[styles.inputBoxes,{ top: height * inputBoxSizes[index]}]}>{route.params.props.locationList.length}</TextInput>\n                    \n                        </>\n                    \n                    ) : (\n                        <>\n                        <View style={[styles.inputLabels, { top: height * labelSizes[index]}]}>\n                            <Text style={styles.inputLabelText}>{value[0].toUpperCase() + value.substring(1)}</Text>\n                        </View>\n                        \n                        <TextInput autoCapitalize='words' editable={false}\n                                    style={[styles.inputBoxes,{ top: height * inputBoxSizes[index]}]}>{Object.values(route.params.props.profile)[index+1]}</TextInput>\n                        \n                        </>\n                    )}\n                </React.Fragment>\n            )\n        })}\n\n        <GoBackButton/>\n      </View>\n  )\n}\n\n//Get screen height and width for responsive\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        width:\"100%\",\n        height:\"100%\",\n        backgroundColor: '#FFCC56',\n        alignItems: 'center',\n        justifyContent:'center',\n        position:\"relative\",\n    },\n\n    inputBoxes:{\n        position:\"absolute\",\n        width:width * 0.7,\n        height:height * 0.06,\n        textAlign:\"center\",\n        fontSize:width * 0.04,\n        fontFamily:\"Rakkas\",\n        backgroundColor:\"white\",\n        color:\"black\",\n        borderWidth:1,\n        borderRadius:10,\n        shadowColor:'black',\n        shadowRadius:2,\n        shadowOpacity:0.9,\n        shadowOffset:{\n            width:1,\n            height:3\n        }\n    },\n\n    inputLabels:{\n        position:\"absolute\",\n        padding:10,\n        left:width * 0.16,\n        borderTopStartRadius:10,\n        borderTopEndRadius:10,\n    },\n    \n    inputLabelText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.05,\n    },\n    \n    updateProfile:{\n        position:\"absolute\",\n        backgroundColor:\"tomato\",\n        top: height * 0.9,\n        width: width * 0.7,\n        height: height * 0.06,\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        borderRadius:15,\n    },\n    \n    updateProfileText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.05,\n        color:\"white\"\n    },\n\n    vectorBackground:{\n        position:'absolute',\n        width: width * 1.5,\n        height: height * 0.75,\n        top:height * -0.3,\n        left: width * -0.01\n    },\n\n    userCircleIconContainer:{\n        position:\"absolute\",\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        backgroundColor:'#ECECEC',\n        top:height * 0.16,\n        left: width * 0.5,\n        width: 160,\n        height: 160,\n        borderWidth: 7,\n        overflow:\"hidden\",\n        borderRadius: 100,\n    },\n\n    userIcon:{\n        position:\"absolute\",\n        width: width * 0.28,\n        height: height * 0.17,\n        top: height * 0.034,\n    },\n    userNameContainer:{\n        position:\"absolute\",\n        width: width * 0.4,\n        height: height * 0.15,\n        top: height * 0.12,\n        left: width *0.05,\n        alignItems:\"center\",\n        shadowColor:\"gray\",\n        shadowOpacity:0.5,\n        shadowRadius:3,\n        shadowOffset:{width:1, height:6},\n        justifyContent:\"center\",\n    },\n\n    userNameText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.07,\n        textAlign:\"center\",\n    }\n\n\n})\n\nexport default ProfilePage"]},"metadata":{},"sourceType":"module"}