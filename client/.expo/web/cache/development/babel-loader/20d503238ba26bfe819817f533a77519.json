{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport { FAB, Portal, Provider } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\nimport { LOGIN_KEY, GET_PROFILE } from '@env';\nimport { AuthContext } from \"./forgotPassword\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\n\nvar Settings = function Settings(props) {\n  var _useState = useState({\n    open: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      actionButton = _useState2[0],\n      setActionButton = _useState2[1];\n\n  var onStateChange = function onStateChange(_ref) {\n    var open = _ref.open;\n    return setActionButton({\n      open: open\n    });\n  };\n\n  var open = actionButton.open;\n  var navigation = useNavigation();\n\n  var handleProfilePage = function handleProfilePage() {\n    navigation.navigate('ProfilePage', {\n      props: props\n    });\n  };\n\n  var arriveState = React.useContext(AuthContext);\n\n  var handleLogOut = function handleLogOut() {\n    arriveState.authContext.signOut();\n  };\n\n  return _jsx(Provider, {\n    children: _jsx(Portal, {\n      children: _jsx(FAB.Group, {\n        open: open,\n        style: {\n          fontFamily: \"Rakkas\",\n          elevation: 10,\n          zIndex: 5\n        },\n        fabStyle: {\n          backgroundColor: 'black',\n          elevation: 10,\n          zIndex: 5,\n          borderColor: 'lightgray',\n          borderWidth: 3\n        },\n        color: \"#FFCC56\",\n        icon: open ? 'close' : 'account',\n        actions: [{\n          icon: 'account',\n          label: 'Profile',\n          labelStyle: {\n            borderColor: \"black\",\n            borderWidth: 3\n          },\n          color: \"black\",\n          onPress: function onPress() {\n            return handleProfilePage();\n          }\n        }, {\n          icon: 'logout',\n          label: 'Log Out',\n          labelStyle: {\n            borderColor: \"black\",\n            borderWidth: 3\n          },\n          color: \"black\",\n          onPress: function onPress() {\n            return handleLogOut();\n          },\n          small: false\n        }],\n        onStateChange: onStateChange,\n        onPress: function onPress() {\n          if (open) {}\n        }\n      })\n    })\n  });\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/subScreens/Settings.js"],"names":["React","useState","useEffect","FAB","Portal","Provider","useNavigation","useRoute","SecureStore","axios","LOGIN_KEY","GET_PROFILE","AuthContext","Settings","props","open","actionButton","setActionButton","onStateChange","navigation","handleProfilePage","navigate","arriveState","useContext","handleLogOut","authContext","signOut","fontFamily","elevation","zIndex","backgroundColor","borderColor","borderWidth","icon","label","labelStyle","color","onPress","small"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {FAB, Portal, Provider} from 'react-native-paper'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios'\nimport { LOGIN_KEY, GET_PROFILE } from '@env'\nimport { AuthContext } from './forgotPassword';\n\nconst Settings = (props) => {\n\n    const [actionButton, setActionButton] = useState({ open: false });\n\n    const onStateChange = ({ open }) => setActionButton({ open });\n\n    const { open } = actionButton;\n\n    const navigation = useNavigation()\n\n    \n    const handleProfilePage = () => {\n        navigation.navigate('ProfilePage', {props})\n    }\n    \n    const arriveState = React.useContext(AuthContext)\n    const handleLogOut = () =>{\n        arriveState.authContext.signOut()\n    }\n\n\n  return (\n    <Provider>\n            <Portal>\n                <FAB.Group\n                open={open}\n                style={{fontFamily:\"Rakkas\", elevation:10, zIndex:5,}}\n                fabStyle={{backgroundColor:'black', elevation:10, zIndex:5, borderColor:'lightgray', borderWidth:3}}\n                color='#FFCC56'\n                icon={open ? 'close' : 'account'}\n                actions={[\n                    {\n                    icon: 'account',\n                    label: 'Profile',\n                    \n                    labelStyle:{borderColor:\"black\", borderWidth:3},\n                    color:\"black\",\n                    onPress: () => handleProfilePage(),\n                    },\n                    {\n                    icon: 'logout',\n                    label: 'Log Out',\n                    labelStyle:{borderColor:\"black\", borderWidth:3},\n                    color:\"black\",\n                    onPress: () => handleLogOut(),\n                    small: false,\n                    },\n                ]}\n                onStateChange={onStateChange}\n                onPress={() => {\n                    if (open) {\n                    }\n                }}\n                />\n            </Portal>\n        </Provider>\n  )\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}