{"ast":null,"code":"import _defineProperty2 from \"@babel/runtime/helpers/defineProperty\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); enumerableOnly && (symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; })), keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = null != arguments[i] ? arguments[i] : {}; i % 2 ? ownKeys(Object(source), !0).forEach(function (key) { _defineProperty2(target, key, source[key]); }) : Object.getOwnPropertyDescriptors ? Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)) : ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } return target; }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport NativeInterface from \"./nativeInterface\";\nimport InternetReachability from \"./internetReachability\";\nimport * as PrivateTypes from \"./privateTypes\";\n\nvar State = _createClass(function State(configuration) {\n  var _this = this;\n\n  _classCallCheck(this, State);\n\n  _defineProperty(this, \"_nativeEventSubscription\", null);\n\n  _defineProperty(this, \"_subscriptions\", new Set());\n\n  _defineProperty(this, \"_latestState\", null);\n\n  _defineProperty(this, \"_internetReachability\", void 0);\n\n  _defineProperty(this, \"_handleNativeStateUpdate\", function (state) {\n    _this._internetReachability.update(state);\n\n    var convertedState = _this._convertState(state);\n\n    _this._latestState = convertedState;\n\n    _this._subscriptions.forEach(function (handler) {\n      return handler(convertedState);\n    });\n  });\n\n  _defineProperty(this, \"_handleInternetReachabilityUpdate\", function (isInternetReachable) {\n    if (!_this._latestState) {\n      return;\n    }\n\n    var nextState = _objectSpread(_objectSpread({}, _this._latestState), {}, {\n      isInternetReachable: isInternetReachable\n    });\n\n    _this._latestState = nextState;\n\n    _this._subscriptions.forEach(function (handler) {\n      return handler(nextState);\n    });\n  });\n\n  _defineProperty(this, \"_fetchCurrentState\", function _callee(requestedInterface) {\n    var state, convertedState;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(NativeInterface.getCurrentState(requestedInterface));\n\n          case 2:\n            state = _context.sent;\n\n            _this._internetReachability.update(state);\n\n            convertedState = _this._convertState(state);\n\n            if (!requestedInterface) {\n              _this._latestState = convertedState;\n            }\n\n            return _context.abrupt(\"return\", convertedState);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  });\n\n  _defineProperty(this, \"_convertState\", function (input) {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input;\n    } else {\n      return _objectSpread(_objectSpread({}, input), {}, {\n        isInternetReachable: _this._internetReachability.currentState()\n      });\n    }\n  });\n\n  _defineProperty(this, \"latest\", function (requestedInterface) {\n    if (requestedInterface) {\n      return _this._fetchCurrentState(requestedInterface);\n    } else if (_this._latestState) {\n      return Promise.resolve(_this._latestState);\n    } else {\n      return _this._fetchCurrentState();\n    }\n  });\n\n  _defineProperty(this, \"add\", function (handler) {\n    _this._subscriptions.add(handler);\n\n    if (_this._latestState) {\n      handler(_this._latestState);\n    } else {\n      _this.latest().then(handler);\n    }\n  });\n\n  _defineProperty(this, \"remove\", function (handler) {\n    _this._subscriptions.delete(handler);\n  });\n\n  _defineProperty(this, \"tearDown\", function () {\n    if (_this._internetReachability) {\n      _this._internetReachability.tearDown();\n    }\n\n    if (_this._nativeEventSubscription) {\n      _this._nativeEventSubscription.remove();\n    }\n\n    _this._subscriptions.clear();\n  });\n\n  this._internetReachability = new InternetReachability(configuration, this._handleInternetReachabilityUpdate);\n  this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(PrivateTypes.DEVICE_CONNECTIVITY_EVENT, this._handleNativeStateUpdate);\n\n  this._fetchCurrentState();\n});\n\nexport { State as default };","map":{"version":3,"sources":["state.ts"],"names":["constructor","NativeInterface","PrivateTypes","state","convertedState","handler","isInternetReachable","nextState","input","requestedInterface","Promise"],"mappings":"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","sourcesContent":["/**\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n *\n * @format\n */\n\nimport {NativeEventSubscription} from 'react-native';\nimport NativeInterface from './nativeInterface';\nimport InternetReachability from './internetReachability';\nimport * as Types from './types';\nimport * as PrivateTypes from './privateTypes';\n\nexport default class State {\n  private _nativeEventSubscription: NativeEventSubscription | null = null;\n  private _subscriptions = new Set<Types.NetInfoChangeHandler>();\n  private _latestState: Types.NetInfoState | null = null;\n  private _internetReachability: InternetReachability;\n\n  constructor(configuration: Types.NetInfoConfiguration) {\n    // Add the listener to the internet connectivity events\n    this._internetReachability = new InternetReachability(\n      configuration,\n      this._handleInternetReachabilityUpdate,\n    );\n\n    // Add the subscription to the native events\n    this._nativeEventSubscription = NativeInterface.eventEmitter.addListener(\n      PrivateTypes.DEVICE_CONNECTIVITY_EVENT,\n      this._handleNativeStateUpdate,\n    );\n\n    // Fetch the current state from the native module\n    this._fetchCurrentState();\n  }\n\n  private _handleNativeStateUpdate = (\n    state: PrivateTypes.NetInfoNativeModuleState,\n  ): void => {\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n\n    // Convert the state from native to JS shape\n    const convertedState = this._convertState(state);\n\n    // Update the listeners\n    this._latestState = convertedState;\n    this._subscriptions.forEach((handler): void => handler(convertedState));\n  };\n\n  private _handleInternetReachabilityUpdate = (\n    isInternetReachable: boolean | null | undefined,\n  ): void => {\n    if (!this._latestState) {\n      return;\n    }\n\n    const nextState = {\n      ...this._latestState,\n      isInternetReachable,\n    } as Types.NetInfoState;\n    this._latestState = nextState;\n    this._subscriptions.forEach((handler): void => handler(nextState));\n  };\n\n  private _fetchCurrentState = async (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    const state = await NativeInterface.getCurrentState(requestedInterface);\n\n    // Update the internet reachability module\n    this._internetReachability.update(state);\n    // Convert and store the new state\n    const convertedState = this._convertState(state);\n    if (!requestedInterface) {\n      this._latestState = convertedState;\n    }\n\n    return convertedState;\n  };\n\n  private _convertState = (\n    input: PrivateTypes.NetInfoNativeModuleState,\n  ): Types.NetInfoState => {\n    if (typeof input.isInternetReachable === 'boolean') {\n      return input as Types.NetInfoState;\n    } else {\n      return {\n        ...input,\n        isInternetReachable: this._internetReachability.currentState(),\n      } as Types.NetInfoState;\n    }\n  };\n\n  public latest = (\n    requestedInterface?: string,\n  ): Promise<Types.NetInfoState> => {\n    if (requestedInterface) {\n      return this._fetchCurrentState(requestedInterface);\n    } else if (this._latestState) {\n      return Promise.resolve(this._latestState);\n    } else {\n      return this._fetchCurrentState();\n    }\n  };\n\n  public add = (handler: Types.NetInfoChangeHandler): void => {\n    // Add the subscription handler to our set\n    this._subscriptions.add(handler);\n\n    // Send it the latest data we have\n    if (this._latestState) {\n      handler(this._latestState);\n    } else {\n      this.latest().then(handler);\n    }\n  };\n\n  public remove = (handler: Types.NetInfoChangeHandler): void => {\n    this._subscriptions.delete(handler);\n  };\n\n  public tearDown = (): void => {\n    if (this._internetReachability) {\n      this._internetReachability.tearDown();\n    }\n\n    if (this._nativeEventSubscription) {\n      this._nativeEventSubscription.remove();\n    }\n\n    this._subscriptions.clear();\n  };\n}\n"]},"metadata":{},"sourceType":"module"}