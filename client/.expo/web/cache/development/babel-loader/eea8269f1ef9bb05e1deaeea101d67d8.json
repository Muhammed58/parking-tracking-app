{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\nimport { LOGIN_KEY, GET_LASTLOCATION, GET_LOCATIONLIST, REGISTER_USER, GET_PROFILE, POST_LOCATION, DELETE_LOCATION, LOGIN_URL } from '@env';\nexport var postSignIn = function postSignIn(enterEmail, loginPassword) {\n  return _regeneratorRuntime.async(function postSignIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(LOGIN_URL, {\n            email: enterEmail,\n            password: loginPassword\n          }));\n\n        case 2:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postSignUp = function postSignUp(name, email, passwordState) {\n  return _regeneratorRuntime.async(function postSignUp$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(REGISTER_USER, {\n            name: name,\n            email: email,\n            password: passwordState\n          }));\n\n        case 2:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getLastLocation = function getLastLocation() {\n  var token;\n  return _regeneratorRuntime.async(function getLastLocation$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context3.sent;\n          _context3.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(GET_LASTLOCATION, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 6:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getLocationList = function getLocationList() {\n  var token;\n  return _regeneratorRuntime.async(function getLocationList$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(GET_LOCATIONLIST, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getProfile = function getProfile() {\n  var token;\n  return _regeneratorRuntime.async(function getProfile$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(GET_PROFILE, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendLocation = function sendLocation(latitude, longitude) {\n  var token;\n  return _regeneratorRuntime.async(function sendLocation$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context6.sent;\n          _context6.next = 5;\n          return _regeneratorRuntime.awrap(axios.post(POST_LOCATION, {\n            locationInfo: [latitude, longitude]\n          }, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteLocationRequest = function deleteLocationRequest(deleteLocation) {\n  var token;\n  return _regeneratorRuntime.async(function deleteLocationRequest$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context7.sent;\n          _context7.next = 5;\n          return _regeneratorRuntime.awrap(axios.delete(DELETE_LOCATION + deleteLocation, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/api.js"],"names":["axios","SecureStore","LOGIN_KEY","GET_LASTLOCATION","GET_LOCATIONLIST","REGISTER_USER","GET_PROFILE","POST_LOCATION","DELETE_LOCATION","LOGIN_URL","postSignIn","enterEmail","loginPassword","post","email","password","postSignUp","name","passwordState","getLastLocation","getItemAsync","token","get","headers","getLocationList","getProfile","sendLocation","latitude","longitude","locationInfo","deleteLocationRequest","deleteLocation","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport * as SecureStore from 'expo-secure-store';\nimport {LOGIN_KEY, GET_LASTLOCATION, GET_LOCATIONLIST, REGISTER_USER, \n    GET_PROFILE, POST_LOCATION, DELETE_LOCATION, LOGIN_URL } from '@env'\n\n// ************* SEND LOGIN INFORMATION TO SERVER *************\nexport const postSignIn = async(enterEmail, loginPassword) =>{\n    await axios.post(LOGIN_URL, { email: enterEmail, password: loginPassword })\n}\n\n// ************* SET LAST LOCATION DATA *************\nexport const postSignUp = async(name, email, passwordState ) =>{\n    await axios.post(REGISTER_USER, { name: name, email: email, password: passwordState})\n}\n\n\n// ************* SET LAST LOCATION DATA *************\nexport const getLastLocation =  async () =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.get(GET_LASTLOCATION, { headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* GET LIST OF LOCATIONS *************\nexport const getLocationList = async()=>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.get(GET_LOCATIONLIST, { headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* GET PROFILE INFORMATION *************\nexport const getProfile = async() =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    await axios.get(GET_PROFILE,{ headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* SEND PARKING COORDINATES *************\nexport const sendLocation = async(latitude,longitude) =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    await axios.post( POST_LOCATION, { locationInfo: [latitude, longitude]},{ headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* SEND PARKING COORDINATES *************\nexport const deleteLocationRequest = async(deleteLocation) =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    await axios.delete(DELETE_LOCATION + deleteLocation,{ headers: {\"Authorization\" : `Bearer ${token}`}})\n}"]},"metadata":{},"sourceType":"module"}