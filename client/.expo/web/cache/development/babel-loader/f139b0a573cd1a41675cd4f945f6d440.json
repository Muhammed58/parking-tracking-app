{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport axios from 'axios';\nimport * as SecureStore from 'expo-secure-store';\nimport { LOGIN_KEY, GET_LASTLOCATION, GET_LOCATIONLIST, REGISTER_USER, GET_PROFILE, POST_LOCATION, DELETE_LOCATION, LOGIN_URL, REQUEST_RESET_PASSWORD } from '@env';\nexport var postSignIn = function postSignIn(enterEmail, loginPassword) {\n  return _regeneratorRuntime.async(function postSignIn$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(LOGIN_URL, {\n            email: enterEmail,\n            password: loginPassword\n          }));\n\n        case 2:\n          return _context.abrupt(\"return\", _context.sent);\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendPasswordResetEmail = function sendPasswordResetEmail(enterEmail) {\n  return _regeneratorRuntime.async(function sendPasswordResetEmail$(_context2) {\n    while (1) {\n      switch (_context2.prev = _context2.next) {\n        case 0:\n          _context2.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(REQUEST_RESET_PASSWORD, {\n            email: enterEmail\n          }));\n\n        case 2:\n          return _context2.abrupt(\"return\", _context2.sent);\n\n        case 3:\n        case \"end\":\n          return _context2.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var postSignUp = function postSignUp(name, email, passwordState) {\n  return _regeneratorRuntime.async(function postSignUp$(_context3) {\n    while (1) {\n      switch (_context3.prev = _context3.next) {\n        case 0:\n          _context3.next = 2;\n          return _regeneratorRuntime.awrap(axios.post(REGISTER_USER, {\n            name: name,\n            email: email,\n            password: passwordState\n          }));\n\n        case 2:\n          return _context3.abrupt(\"return\", _context3.sent);\n\n        case 3:\n        case \"end\":\n          return _context3.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getLastLocation = function getLastLocation() {\n  var token;\n  return _regeneratorRuntime.async(function getLastLocation$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          _context4.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context4.sent;\n          _context4.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(GET_LASTLOCATION, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context4.abrupt(\"return\", _context4.sent);\n\n        case 6:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getLocationList = function getLocationList() {\n  var token;\n  return _regeneratorRuntime.async(function getLocationList$(_context5) {\n    while (1) {\n      switch (_context5.prev = _context5.next) {\n        case 0:\n          _context5.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context5.sent;\n          _context5.next = 5;\n          return _regeneratorRuntime.awrap(axios.get(GET_LOCATIONLIST, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context5.abrupt(\"return\", _context5.sent);\n\n        case 6:\n        case \"end\":\n          return _context5.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var getProfile = function getProfile(userToken) {\n  return _regeneratorRuntime.async(function getProfile$(_context6) {\n    while (1) {\n      switch (_context6.prev = _context6.next) {\n        case 0:\n          _context6.next = 2;\n          return _regeneratorRuntime.awrap(axios.get(GET_PROFILE, {\n            headers: {\n              \"Authorization\": \"Bearer \" + userToken\n            }\n          }));\n\n        case 2:\n          return _context6.abrupt(\"return\", _context6.sent);\n\n        case 3:\n        case \"end\":\n          return _context6.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var sendLocation = function sendLocation(latitude, longitude) {\n  var token;\n  return _regeneratorRuntime.async(function sendLocation$(_context7) {\n    while (1) {\n      switch (_context7.prev = _context7.next) {\n        case 0:\n          _context7.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context7.sent;\n          _context7.next = 5;\n          return _regeneratorRuntime.awrap(axios.post(POST_LOCATION, {\n            locationInfo: [latitude, longitude]\n          }, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context7.abrupt(\"return\", _context7.sent);\n\n        case 6:\n        case \"end\":\n          return _context7.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\nexport var deleteLocationRequest = function deleteLocationRequest(deleteLocation) {\n  var token;\n  return _regeneratorRuntime.async(function deleteLocationRequest$(_context8) {\n    while (1) {\n      switch (_context8.prev = _context8.next) {\n        case 0:\n          _context8.next = 2;\n          return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n        case 2:\n          token = _context8.sent;\n          _context8.next = 5;\n          return _regeneratorRuntime.awrap(axios.delete(DELETE_LOCATION + deleteLocation, {\n            headers: {\n              \"Authorization\": \"Bearer \" + token\n            }\n          }));\n\n        case 5:\n          return _context8.abrupt(\"return\", _context8.sent);\n\n        case 6:\n        case \"end\":\n          return _context8.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/api.js"],"names":["axios","SecureStore","LOGIN_KEY","GET_LASTLOCATION","GET_LOCATIONLIST","REGISTER_USER","GET_PROFILE","POST_LOCATION","DELETE_LOCATION","LOGIN_URL","REQUEST_RESET_PASSWORD","postSignIn","enterEmail","loginPassword","post","email","password","sendPasswordResetEmail","postSignUp","name","passwordState","getLastLocation","getItemAsync","token","get","headers","getLocationList","getProfile","userToken","sendLocation","latitude","longitude","locationInfo","deleteLocationRequest","deleteLocation","delete"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport * as SecureStore from 'expo-secure-store';\nimport {LOGIN_KEY, GET_LASTLOCATION, GET_LOCATIONLIST, REGISTER_USER, \n    GET_PROFILE, POST_LOCATION, DELETE_LOCATION, LOGIN_URL, REQUEST_RESET_PASSWORD } from '@env'\n\n// ************* SEND LOGIN INFORMATION TO SERVER *************\nexport const postSignIn = async(enterEmail, loginPassword) =>{\n   return await axios.post(LOGIN_URL, { email: enterEmail, password: loginPassword })\n}\n\n// ************* SEND PASSWORD RESET EMAIL *************\nexport const sendPasswordResetEmail = async(enterEmail) =>{\n   return await axios.post(REQUEST_RESET_PASSWORD, { email: enterEmail})\n}\n\n// ************* SET LAST LOCATION DATA *************\nexport const postSignUp = async(name, email, passwordState ) =>{\n    return await axios.post(REGISTER_USER, { name: name, email: email, password: passwordState})\n}\n\n\n// ************* SET LAST LOCATION DATA *************\nexport const getLastLocation =  async () =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.get(GET_LASTLOCATION, { headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* GET LIST OF LOCATIONS *************\nexport const getLocationList = async()=>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.get(GET_LOCATIONLIST, { headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* GET PROFILE INFORMATION *************\nexport const getProfile = async(userToken) =>{\n    return await axios.get(GET_PROFILE,{ headers: {\"Authorization\" : `Bearer ${userToken}`} })\n}\n\n// ************* SEND PARKING COORDINATES *************\nexport const sendLocation = async(latitude,longitude) =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.post( POST_LOCATION, { locationInfo: [latitude, longitude]},{ headers: {\"Authorization\" : `Bearer ${token}`} })\n}\n\n// ************* SEND PARKING COORDINATES *************\nexport const deleteLocationRequest = async(deleteLocation) =>{\n    let token = await SecureStore.getItemAsync(LOGIN_KEY);\n    return await axios.delete(DELETE_LOCATION+deleteLocation,{ headers: {\"Authorization\" : `Bearer ${token}`}})\n}"]},"metadata":{},"sourceType":"module"}