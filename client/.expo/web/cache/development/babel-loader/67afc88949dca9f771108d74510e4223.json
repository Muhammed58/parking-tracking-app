{"ast":null,"code":"import React, { useState } from 'react';\nimport GoBackButton from \"./subScreens/GoBackButton\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport Image from \"react-native-web/dist/exports/Image\";\nvar labels = [\"name\", \"email\", \"gender\", \"country\"];\nvar inputBoxSizes = [0.45, 0.57, 0.69, 0.81];\nvar labelSizes = [0.4, 0.52, 0.64, 0.76];\n\nvar ProfilePage = function ProfilePage(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var vectorBackground = require(\"../assets/images/vector.png\");\n\n  var userCircleIcon = require(\"../assets/images/user.png\");\n\n  return React.createElement(View, {\n    style: styles.container\n  }, React.createElement(Image, {\n    style: styles.vectorBackground,\n    source: vectorBackground\n  }), React.createElement(View, {\n    style: styles.userNameContainer\n  }, React.createElement(Text, {\n    style: styles.userNameText\n  }, route.params.profile.name)), React.createElement(View, {\n    style: styles.userCircleIconContainer\n  }, React.createElement(Image, {\n    source: userCircleIcon,\n    style: styles.userIcon\n  })), labels.map(function (value, index) {\n    return React.createElement(React.Fragment, {\n      key: index\n    }, React.createElement(View, {\n      style: [styles.inputLabels, {\n        top: height * labelSizes[index]\n      }]\n    }, React.createElement(Text, {\n      style: styles.inputLabelText\n    }, value[0].toUpperCase() + value.substring(1))), React.createElement(TextInput, {\n      autoCapitalize: \"words\",\n      editable: false,\n      style: [styles.inputBoxes, {\n        top: height * inputBoxSizes[index]\n      }]\n    }, Object.values(route.params.profile)[index + 1]));\n  }), React.createElement(Pressable, {\n    style: function style(_ref2) {\n      var pressed = _ref2.pressed;\n      return [{\n        shadowColor: \"black\",\n        shadowRadius: 2,\n        shadowOpacity: pressed ? 0.1 : 0.9,\n        shadowOffset: pressed ? {\n          width: 0,\n          height: 1\n        } : {\n          width: 0,\n          height: 3\n        },\n        transform: [pressed ? {\n          translateY: 10\n        } : {\n          translateY: 0\n        }]\n      }, styles.updateProfile];\n    }\n  }, React.createElement(Text, {\n    style: styles.updateProfileText\n  }, \"Update Profile\")), React.createElement(GoBackButton, null));\n};\n\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: '#FFCC56',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: \"relative\"\n  },\n  inputBoxes: {\n    position: \"absolute\",\n    width: width * 0.7,\n    height: height * 0.06,\n    textAlign: \"center\",\n    fontSize: width * 0.04,\n    fontFamily: \"Rakkas\",\n    backgroundColor: \"white\",\n    borderWidth: 1,\n    borderRadius: 10,\n    shadowColor: 'black',\n    shadowRadius: 2,\n    shadowOpacity: 0.9,\n    shadowOffset: {\n      width: 1,\n      height: 3\n    }\n  },\n  inputLabels: {\n    position: \"absolute\",\n    padding: 10,\n    left: width * 0.16,\n    borderTopStartRadius: 10,\n    borderTopEndRadius: 10\n  },\n  inputLabelText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.05\n  },\n  updateProfile: {\n    position: \"absolute\",\n    backgroundColor: \"tomato\",\n    top: height * 0.9,\n    width: width * 0.7,\n    height: height * 0.06,\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    borderRadius: 15\n  },\n  updateProfileText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.05,\n    color: \"white\"\n  },\n  vectorBackground: {\n    position: 'absolute',\n    width: width * 1.5,\n    height: height * 0.75,\n    top: height * -0.3,\n    left: width * -0.01\n  },\n  userCircleIconContainer: {\n    position: \"absolute\",\n    alignItems: \"center\",\n    justifyContent: \"center\",\n    backgroundColor: '#ECECEC',\n    top: height * 0.16,\n    left: width * 0.5,\n    width: 160,\n    height: 160,\n    borderWidth: 7,\n    overflow: \"hidden\",\n    borderRadius: 100\n  },\n  userIcon: {\n    position: \"absolute\",\n    width: width * 0.28,\n    height: height * 0.17,\n    top: height * 0.034\n  },\n  userNameContainer: {\n    position: \"absolute\",\n    width: width * 0.4,\n    height: height * 0.15,\n    top: height * 0.12,\n    left: width * 0.05,\n    alignItems: \"center\",\n    shadowColor: \"gray\",\n    shadowOpacity: 0.5,\n    shadowRadius: 3,\n    shadowOffset: {\n      width: 1,\n      height: 6\n    },\n    justifyContent: \"center\"\n  },\n  userNameText: {\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.07,\n    textAlign: \"center\"\n  }\n});\nexport default ProfilePage;","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/ProfilePage.js"],"names":["React","useState","GoBackButton","labels","inputBoxSizes","labelSizes","ProfilePage","route","navigation","vectorBackground","require","userCircleIcon","styles","container","userNameContainer","userNameText","params","profile","name","userCircleIconContainer","userIcon","map","value","index","inputLabels","top","height","inputLabelText","toUpperCase","substring","inputBoxes","Object","values","pressed","shadowColor","shadowRadius","shadowOpacity","shadowOffset","width","transform","translateY","updateProfile","updateProfileText","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","textAlign","fontSize","fontFamily","borderWidth","borderRadius","padding","left","borderTopStartRadius","borderTopEndRadius","color","overflow"],"mappings":"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","sourcesContent":["import React, {useState} from 'react'\nimport GoBackButton from './subScreens/GoBackButton'\nimport {View, Text, Dimensions, StyleSheet, TextInput, Pressable, Image} from 'react-native'\n\n\n\nconst labels =[\"name\", \"email\", \"gender\", \"country\"]\nconst inputBoxSizes =[ 0.45, 0.57, 0.69, 0.81  ]\nconst labelSizes =[ 0.4, 0.52, 0.64, 0.76]\n\nconst ProfilePage = ({route, navigation}) => {\n\n    const vectorBackground = require('../assets/images/vector.png')\n    const userCircleIcon = require('../assets/images/user.png')\n\n  return (\n      <View style={styles.container}>\n          \n          \n        <Image style={styles.vectorBackground} \n                source={vectorBackground}/>\n\n        <View style={styles.userNameContainer}>\n            <Text style={styles.userNameText}>{route.params.profile.name}</Text>\n        </View>\n\n        <View style={styles.userCircleIconContainer}>\n            <Image source={userCircleIcon} style={styles.userIcon}/>\n        </View>\n        {labels.map((value,index)=>{\n            return(\n                <React.Fragment key={index}>\n                    <View style={[styles.inputLabels, { top: height * labelSizes[index]}]}>\n                        <Text style={styles.inputLabelText}>{value[0].toUpperCase() + value.substring(1)}</Text>\n                    </View>\n                    <TextInput autoCapitalize='words' editable={false}\n                           style={[styles.inputBoxes,{ top: height * inputBoxSizes[index]}]}>{Object.values(route.params.profile)[index+1]}</TextInput>\n                </React.Fragment>\n            )\n        })}\n\n        <Pressable  style={\n            ({pressed}) =>[\n                { shadowColor:\"black\", \n                shadowRadius:2,\n                shadowOpacity: pressed? 0.1: 0.9,\n                shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                transform:[pressed ? {translateY: 10}:{ translateY:0}]\n                },\n            styles.updateProfile]}>\n            <Text style={styles.updateProfileText}>Update Profile</Text>\n        </Pressable>\n\n\n        <GoBackButton/>\n      </View>\n  )\n}\n\n//Get screen height and width for responsive\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        width:\"100%\",\n        height:\"100%\",\n        backgroundColor: '#FFCC56',\n        alignItems: 'center',\n        justifyContent:'center',\n        position:\"relative\",\n    },\n\n    inputBoxes:{\n        position:\"absolute\",\n        width:width * 0.7,\n        height:height * 0.06,\n        textAlign:\"center\",\n        fontSize:width * 0.04,\n        fontFamily:\"Rakkas\",\n        backgroundColor:\"white\",\n        borderWidth:1,\n        borderRadius:10,\n        shadowColor:'black',\n        shadowRadius:2,\n        shadowOpacity:0.9,\n        shadowOffset:{\n            width:1,\n            height:3\n        }\n    },\n\n    inputLabels:{\n        position:\"absolute\",\n        padding:10,\n        left:width * 0.16,\n        borderTopStartRadius:10,\n        borderTopEndRadius:10,\n    },\n    \n    inputLabelText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.05\n    },\n    \n    updateProfile:{\n        position:\"absolute\",\n        backgroundColor:\"tomato\",\n        top: height * 0.9,\n        width: width * 0.7,\n        height: height * 0.06,\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        borderRadius:15,\n    },\n    \n    updateProfileText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.05,\n        color:\"white\"\n    },\n\n    vectorBackground:{\n        position:'absolute',\n        width: width * 1.5,\n        height: height * 0.75,\n        top:height * -0.3,\n        left: width * -0.01\n    },\n\n    userCircleIconContainer:{\n        position:\"absolute\",\n        alignItems:\"center\",\n        justifyContent:\"center\",\n        backgroundColor:'#ECECEC',\n        top:height * 0.16,\n        left: width * 0.5,\n        width: 160,\n        height: 160,\n        borderWidth: 7,\n        overflow:\"hidden\",\n        borderRadius: 100,\n    },\n\n    userIcon:{\n        position:\"absolute\",\n        width: width * 0.28,\n        height: height * 0.17,\n        top: height * 0.034,\n    },\n    userNameContainer:{\n        position:\"absolute\",\n        width: width * 0.4,\n        height: height * 0.15,\n        top: height * 0.12,\n        left: width *0.05,\n        alignItems:\"center\",\n        shadowColor:\"gray\",\n        shadowOpacity:0.5,\n        shadowRadius:3,\n        shadowOffset:{width:1, height:6},\n        justifyContent:\"center\",\n    },\n\n    userNameText:{\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.07,\n        textAlign:\"center\",\n    }\n\n\n})\n\nexport default ProfilePage"]},"metadata":{},"sourceType":"module"}