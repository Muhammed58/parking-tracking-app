{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from 'react';\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font';\nimport { LoginPanel } from \"./subScreens/forgotPassword.js\";\nimport ImageBackground from \"react-native-web/dist/exports/ImageBackground\";\nimport ActivityIndicator from \"react-native-web/dist/exports/ActivityIndicator\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Keyboard from \"react-native-web/dist/exports/Keyboard\";\nimport TouchableWithoutFeedback from \"react-native-web/dist/exports/TouchableWithoutFeedback\";\nexport default function Home(_ref) {\n  var navigation = _ref.navigation;\n\n  var _useFonts = useFonts({\n    Rakkas: require(\"../assets/fonts/Rakkas-Regular.ttf\")\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  var image = require(\"../assets/images/backgroundCars.jpg\");\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setisLoading = _useState2[1];\n\n  useEffect(function () {\n    setTimeout(function () {\n      setisLoading(false);\n    }, 500);\n  }, [navigation]);\n\n  var KeyboardDismiss = function KeyboardDismiss(_ref2) {\n    var children = _ref2.children;\n    return React.createElement(TouchableWithoutFeedback, {\n      onPress: function onPress() {\n        return Keyboard.dismiss();\n      }\n    }, children);\n  };\n\n  if (!loaded) {\n    return null;\n  }\n\n  return React.createElement(React.Fragment, null, isLoading === true ? React.createElement(View, {\n    style: {\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      width: \"100%\",\n      height: \"100%\",\n      backgroundColor: \"#FFCC56\"\n    }\n  }, React.createElement(Text, {\n    style: {\n      fontSize: 25,\n      fontFamily: \"Rakkas\",\n      bottom: 20\n    }\n  }, \"Loading...\"), React.createElement(ActivityIndicator, {\n    size: \"large\",\n    color: \"#064635\"\n  })) : React.createElement(KeyboardDismiss, null, React.createElement(View, {\n    style: styles.mainContainer\n  }, React.createElement(StatusBar, {\n    translucent: true,\n    backgroundColor: \"transparent\"\n  }), React.createElement(ImageBackground, {\n    source: image,\n    style: styles.backgroundImage,\n    resizeMode: \"cover\"\n  }, React.createElement(LoginPanel, {\n    name: \"LoginPanel\",\n    navigation: navigation\n  })))));\n}\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  mainContainer: {\n    position: \"relative\",\n    flex: 1,\n    elevation: 4,\n    width: \"100%\",\n    height: \"100%\",\n    backgroundColor: \"#FFCC56\"\n  },\n  backgroundImage: {\n    flex: 1,\n    width: width * 1,\n    height: height * 0.6,\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/Home.js"],"names":["React","useState","useEffect","StatusBar","useFonts","LoginPanel","Home","navigation","Rakkas","require","loaded","image","isLoading","setisLoading","setTimeout","KeyboardDismiss","children","Keyboard","dismiss","alignItems","justifyContent","width","height","backgroundColor","fontSize","fontFamily","bottom","styles","mainContainer","backgroundImage","Dimensions","get","StyleSheet","create","position","flex","elevation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect }  from 'react';\nimport 'react-native-gesture-handler';\nimport { StatusBar } from 'expo-status-bar';\nimport { useFonts } from 'expo-font'\nimport{ LoginPanel } from './subScreens/forgotPassword.js';\n\n\nimport { ImageBackground, ActivityIndicator,\n        Dimensions, Text, View, StyleSheet,\n         Keyboard, TouchableWithoutFeedback,\n         } from 'react-native';\n\n         \n\nexport default function Home({navigation}) {\n\n    //Fonts define\n    const[loaded] = useFonts({\n        Rakkas: require('../assets/fonts/Rakkas-Regular.ttf')\n    })\n\n    // Main page background image path\n    const image = require('../assets/images/backgroundCars.jpg')\n    \n    \n    //isLoading page\n    const [isLoading, setisLoading] = useState(true)\n\n\n    useEffect(() => {\n      setTimeout(() => {\n          setisLoading(false)\n      }, 500);\n    }, [navigation])\n    \n\n    // Closes the keyboard when clicking anywhere other than input\n    const KeyboardDismiss = ({ children }) => (\n        <TouchableWithoutFeedback onPress = { ()=> Keyboard.dismiss() }>\n            { children }\n        </TouchableWithoutFeedback>\n    );\n    \n    if (!loaded) {\n        return null;\n    }\n    return (\n        <>\n        {isLoading === true ? ( <View style={{\n                                        alignItems:\"center\", \n                                        justifyContent:\"center\",\n                                        width:\"100%\",\n                                        height:\"100%\",\n                                        backgroundColor:\"#FFCC56\"\n                                        }}>\n                                    <Text style={{fontSize:25, fontFamily:\"Rakkas\", bottom:20}}>Loading...</Text>\n                                    <ActivityIndicator size=\"large\" color= \"#064635\"/>\n                                </View>)\n        \n        :(\n\n        <KeyboardDismiss>\n\n        <View style={styles.mainContainer}>\n            <StatusBar translucent={true} backgroundColor=\"transparent\"/>\n\n            <ImageBackground source={image} style={styles.backgroundImage} resizeMode=\"cover\">\n         \n                <LoginPanel name='LoginPanel' navigation={navigation}/>\n\n            </ImageBackground>\n        </View>\n        </KeyboardDismiss> \n        \n        )}\n        </>\n    )\n}\n\n //Get screen height and width for responsive\n const width = Dimensions.get('window').width;\n const height = Dimensions.get('window').height;\n\nconst styles = StyleSheet.create({\n\n    mainContainer :{\n        position:\"relative\",\n        flex: 1,\n        elevation:4,\n        width: \"100%\",\n        height: \"100%\",\n        backgroundColor: \"#FFCC56\"\n    },\n\n    backgroundImage:{\n        flex: 1,\n        width: width * 1,\n        height: height * 0.6,\n        alignItems: \"center\",\n        justifyContent: \"center\",\n    },\n\n})"]},"metadata":{},"sourceType":"module"}