{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport GoBackButton from \"./subScreens/GoBackButton\";\nimport { ErrorPage } from \"./subScreens/ErrorPage.js\";\nimport getNetworkInfo from \"./subScreens/HandleNetworkError.js\";\nimport MapView, { PROVIDER_GOOGLE, Marker } from 'react-native-maps';\nimport View from \"react-native-web/dist/exports/View\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Dimensions from \"react-native-web/dist/exports/Dimensions\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport Pressable from \"react-native-web/dist/exports/Pressable\";\nimport { deleteLocationRequest, getLastLocation, getLocationList } from \"../api.js\";\nimport moment from 'moment';\nimport Rakkas from \"../assets/fonts/fonts.js\";\nimport { useFonts } from 'expo-font';\nimport SplashScreen from \"./subScreens/SplashScreen\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar ParkingHistory = function ParkingHistory(_ref) {\n  var route = _ref.route,\n      navigation = _ref.navigation;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      deleteLocation = _useState2[0],\n      setDeleteLocation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      wantDelete = _useState4[0],\n      setWantDelete = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayOptions = _useState6[0],\n      setDisplayOptions = _useState6[1];\n\n  var handleDeleteLocation = function handleDeleteLocation() {\n    return _regeneratorRuntime.async(function handleDeleteLocation$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            setCheckLastLocation(checkLastLocation ? false : true);\n            _context.next = 3;\n            return _regeneratorRuntime.awrap(deleteLocationRequest(deleteLocation).then(function () {\n              setDisplayOptions(false);\n              getUpdatedLocations();\n              setCheckInternetConnection(checkInternetConnection ? false : true);\n            }).catch(function (err) {\n              console.log(err);\n            }));\n\n          case 3:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var getUpdatedLocations = function getUpdatedLocations() {\n    return _regeneratorRuntime.async(function getUpdatedLocations$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(getLocationList().then(function (res) {\n              setListOfLocations(res.data);\n            }).catch(function (err) {\n              return console.log(err);\n            }));\n\n          case 2:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  };\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      errorMessage = _useState8[0],\n      setErrorMessage = _useState8[1];\n\n  var _useState9 = useState('Error'),\n      _useState10 = _slicedToArray(_useState9, 2),\n      errorMessageText = _useState10[0],\n      setErrorMessageText = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      checkInternetConnection = _useState12[0],\n      setCheckInternetConnection = _useState12[1];\n\n  useEffect(function () {\n    if (getNetworkInfo() === false) {\n      setErrorMessage(true);\n      setErrorMessageText('Check Your Internet Connection!');\n    }\n  }, [checkInternetConnection]);\n\n  var _useState13 = useState([route.params.latitude, route.params.longitude]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      lastLocation = _useState14[0],\n      setLastLocation = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      checkLastLocation = _useState16[0],\n      setCheckLastLocation = _useState16[1];\n\n  useEffect(function () {\n    getLastLocation().then(function (res) {\n      setLastLocation(res.data.location);\n    }).catch(function (err) {\n      console.log(err);\n    });\n  }, [checkLastLocation]);\n\n  var _useState17 = useState(route.params.locationList),\n      _useState18 = _slicedToArray(_useState17, 2),\n      listOfLocations = _useState18[0],\n      setListOfLocations = _useState18[1];\n\n  useEffect(function () {\n    if (listOfLocations.length === 0) {\n      setErrorMessage(true);\n      setErrorMessageText('Location Not found!');\n      setTimeout(function () {\n        return navigation.navigate('MainPage', {\n          params: true\n        });\n      }, 1000);\n    }\n  }, [listOfLocations]);\n\n  var _useFonts = useFonts({\n    Rakkas: Rakkas\n  }),\n      _useFonts2 = _slicedToArray(_useFonts, 1),\n      loaded = _useFonts2[0];\n\n  if (!loaded) {\n    _jsx(SplashScreen, {});\n  }\n\n  return _jsxs(View, {\n    style: styles.container,\n    children: [_jsx(MapView, {\n      style: styles.map,\n      provider: PROVIDER_GOOGLE,\n      initialRegion: {\n        latitude: lastLocation[0] || 37.78825,\n        longitude: lastLocation[1] || -122.4324,\n        latitudeDelta: 0.1922,\n        longitudeDelta: 2.5421\n      },\n      children: listOfLocations.map(function (value, index) {\n        return _jsx(Marker, {\n          title: \"\" + moment(value.createdAt).format('MMMM Do YYYY, h:mm:ss a'),\n          coordinate: {\n            latitude: value.location[0],\n            longitude: value.location[1]\n          },\n          onPress: function onPress() {\n            setDeleteLocation(value._id), setWantDelete(true), setDisplayOptions(false);\n          }\n        }, index);\n      })\n    }), wantDelete && _jsx(Pressable, {\n      style: function style(_ref2) {\n        var pressed = _ref2.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            height: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.deleteLocation]];\n      },\n      onPress: function onPress() {\n        setDisplayOptions(true), setWantDelete(false);\n      },\n      children: _jsx(Text, {\n        style: styles.deleteLocationText,\n        children: \"Delete this location?\"\n      })\n    }), displayOptions && _jsx(Pressable, {\n      style: function style(_ref3) {\n        var pressed = _ref3.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            height: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.cancelDeleteContainer]];\n      },\n      onPress: function onPress() {\n        setDisplayOptions(false), setWantDelete(true);\n      },\n      children: _jsx(Text, {\n        style: styles.cancelDeleteContainerText,\n        children: \"Cancel\"\n      })\n    }), displayOptions && _jsx(Pressable, {\n      style: function style(_ref4) {\n        var pressed = _ref4.pressed;\n        return [{\n          shadowColor: \"black\",\n          shadowRadius: 2,\n          shadowOpacity: pressed ? 0.1 : 0.9,\n          shadowOffset: pressed ? {\n            width: 0,\n            hight: 1\n          } : {\n            width: 0,\n            height: 3\n          },\n          transform: [pressed ? {\n            translateY: 10\n          } : {\n            translateY: 0\n          }]\n        }, [styles.allowDeleteContainer]];\n      },\n      onPress: handleDeleteLocation,\n      children: _jsx(Text, {\n        style: styles.allowDeleteContainerText,\n        children: \"Delete\"\n      })\n    }), errorMessage && _jsx(ErrorPage, {\n      errorMessage: errorMessageText\n    }), _jsx(GoBackButton, {})]\n  });\n};\n\nvar width = Dimensions.get('window').width;\nvar height = Dimensions.get('window').height;\nvar styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: '#fff',\n    alignItems: 'center',\n    justifyContent: 'center',\n    position: \"relative\"\n  },\n  map: {\n    width: width,\n    height: height,\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  deleteLocation: {\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.18,\n    width: width * 0.6,\n    height: height * 0.06,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  deleteLocationText: {\n    position: 'absolute',\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.05\n  },\n  cancelDeleteContainer: {\n    position: \"absolute\",\n    top: height * 0.7,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"#FFCC56\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  cancelDeleteContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  },\n  allowDeleteContainer: {\n    position: \"absolute\",\n    top: height * 0.8,\n    left: width * 0.25,\n    width: width * 0.5,\n    height: height * 0.07,\n    borderRadius: 30,\n    backgroundColor: \"tomato\",\n    justifyContent: \"center\",\n    alignItems: \"center\"\n  },\n  allowDeleteContainerText: {\n    position: \"absolute\",\n    fontFamily: \"Rakkas\",\n    fontSize: width * 0.06\n  }\n});\nexport default ParkingHistory;","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/ParkingHistory.js"],"names":["React","useState","useEffect","GoBackButton","ErrorPage","getNetworkInfo","MapView","PROVIDER_GOOGLE","Marker","deleteLocationRequest","getLastLocation","getLocationList","moment","Rakkas","useFonts","SplashScreen","ParkingHistory","route","navigation","deleteLocation","setDeleteLocation","wantDelete","setWantDelete","displayOptions","setDisplayOptions","handleDeleteLocation","setCheckLastLocation","checkLastLocation","then","getUpdatedLocations","setCheckInternetConnection","checkInternetConnection","catch","err","console","log","res","setListOfLocations","data","errorMessage","setErrorMessage","errorMessageText","setErrorMessageText","params","latitude","longitude","lastLocation","setLastLocation","location","locationList","listOfLocations","length","setTimeout","navigate","loaded","styles","container","map","latitudeDelta","longitudeDelta","value","index","createdAt","format","_id","pressed","shadowColor","shadowRadius","shadowOpacity","shadowOffset","width","height","transform","translateY","deleteLocationText","cancelDeleteContainer","cancelDeleteContainerText","hight","allowDeleteContainer","allowDeleteContainerText","Dimensions","get","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","position","top","left","borderRadius","fontFamily","fontSize"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport GoBackButton from './subScreens/GoBackButton';\nimport { ErrorPage } from './subScreens/ErrorPage.js';\nimport getNetworkInfo from './subScreens/HandleNetworkError.js'\nimport MapView, {PROVIDER_GOOGLE, Marker} from 'react-native-maps';\nimport { View, StyleSheet, Dimensions, Text, Pressable } from 'react-native'\nimport { deleteLocationRequest, getLastLocation, getLocationList } from '../api.js'\nimport moment from 'moment'\nimport Rakkas from '../assets/fonts/fonts.js'\nimport { useFonts } from 'expo-font';\nimport SplashScreen from './subScreens/SplashScreen';\n\n\nconst ParkingHistory = ({route, navigation}) => {\n\n\n    // LOCATIONS TO BE DELETED\n    const [deleteLocation, setDeleteLocation] = useState('')\n    const [wantDelete, setWantDelete] = useState(false)\n    const [displayOptions, setDisplayOptions] = useState(false)\n    \n\n    // HANDLE DELETE LOCATION\n    const handleDeleteLocation = async() =>{\n        setCheckLastLocation(checkLastLocation? false : true)\n        await deleteLocationRequest(deleteLocation)        \n        .then(()=>{ setDisplayOptions(false); \n                    getUpdatedLocations();\n                    setCheckInternetConnection( checkInternetConnection? false : true)\n                })\n        .catch((err)=>{console.log(err)})\n    }\n\n\n    // GET UPDATED LOCATION LIST AFTER DELETE ONE\n    const getUpdatedLocations = async() =>{\n         await getLocationList()\n            .then((res) => { setListOfLocations(res.data);})\n            .catch(err=> console.log(err))\n    }\n\n\n    //HANDLE ERROR MESSAGES\n    const [errorMessage, setErrorMessage] = useState(false)\n    const [errorMessageText, setErrorMessageText] = useState('Error')\n\n\n    // HANDLE INTERNET CONNECTION ERROR\n    const [checkInternetConnection, setCheckInternetConnection] = useState(false)\n    useEffect(() => {\n       if(getNetworkInfo() === false){\n            setErrorMessage(true)\n            setErrorMessageText('Check Your Internet Connection!')\n       }\n    }, [checkInternetConnection])\n\n\n    // SET LAST LOCATION DATA\n    const [lastLocation, setLastLocation] = useState([route.params.latitude, route.params.longitude])\n    const [checkLastLocation, setCheckLastLocation] = useState(false)\n    useEffect(() => {\n            getLastLocation()            \n            .then((res) => {setLastLocation(res.data.location);})\n            .catch(err=> {console.log(err);})\n        }, [checkLastLocation])\n\n\n    // LOCATION LIST\n    const [listOfLocations, setListOfLocations] = useState(route.params.locationList)\n    useEffect(() => {\n        if(listOfLocations.length === 0){\n            setErrorMessage(true)\n            setErrorMessageText('Location Not found!')\n            setTimeout(() => navigation.navigate('MainPage',{params:true}), 1000);\n        } \n    }, [listOfLocations])\n\n        //Fonts define\n let [loaded] = useFonts({\n    Rakkas: Rakkas\n  })\n     if(!loaded){\n         <SplashScreen/>\n     }\n\n  return (\n    <View style={styles.container}>\n\n        <MapView style={styles.map}\n                provider={PROVIDER_GOOGLE}\n                initialRegion={{\n                    latitude: lastLocation[0] || 37.78825,\n                    longitude: lastLocation[1] ||-122.4324,\n                    latitudeDelta: 0.1922,\n                    longitudeDelta: 2.5421}}\n                    >\n                        \n                {listOfLocations.map((value, index)=>{\n                    return(\n\n                        <Marker key={index} \n                                title={`${moment(value.createdAt).format('MMMM Do YYYY, h:mm:ss a')}`}\n                                coordinate={{latitude:value.location[0], \n                                            longitude:value.location[1]}}\n                                onPress={()=> {setDeleteLocation(value._id), setWantDelete(true), setDisplayOptions(false)}}\n                            />\n                    )\n                })}\n    \n        </MapView>\n\n\n          {wantDelete &&  <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    }, \n                [styles.deleteLocation]]}\n                onPress={()=>{setDisplayOptions(true),setWantDelete(false)}}\n                >\n                    <Text style={styles.deleteLocationText}>Delete this location?</Text>\n                </Pressable>}\n\n            \n            {displayOptions && <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1 : 0.9,\n                    shadowOffset: pressed ? {width:0, height:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.cancelDeleteContainer]]}\n                onPress={()=> {setDisplayOptions(false), setWantDelete(true)}}\n                > \n                    <Text style={styles.cancelDeleteContainerText}>Cancel</Text>\n                </Pressable>\n            }\n            \n\n            {displayOptions && <Pressable style={\n                 ({pressed}) =>[\n                    { shadowColor:\"black\", \n                    shadowRadius:2,\n                    shadowOpacity: pressed ? 0.1: 0.9,\n                    shadowOffset: pressed ? {width:0, hight:1} : {width:0, height:3},\n                    transform:[pressed ? {translateY: 10} : { translateY:0}]\n                    },\n                [styles.allowDeleteContainer]]}\n                onPress={handleDeleteLocation}\n                >\n                    <Text style={styles.allowDeleteContainerText}>Delete</Text>\n                </Pressable>\n            }\n          \n            { errorMessage && <ErrorPage errorMessage={errorMessageText}/>}\n            \n            <GoBackButton/>\n    </View>\n  )\n}\n\n\n//Get screen height and width for responsive\nconst width = Dimensions.get('window').width;\nconst height = Dimensions.get('window').height;\n\n\nconst styles = StyleSheet.create({\n    container:{\n        flex: 1,\n        backgroundColor: '#fff',\n        alignItems: 'center',\n        justifyContent: 'center',\n        position:\"relative\"\n    },\n\n    map:{\n        width: width,\n        height: height,\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    deleteLocation:{\n        position:\"absolute\",\n        top: height * 0.8,\n        left: width * 0.18,\n        width: width * 0.6,\n        height: height * 0.06,\n        borderRadius: 30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    deleteLocationText:{\n        position:'absolute',\n        fontFamily:\"Rakkas\",\n        fontSize: width * 0.05,\n    },\n\n    cancelDeleteContainer:{\n        position:\"absolute\",\n        top: height *0.7,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height * 0.07,\n        borderRadius:30,\n        backgroundColor:\"#FFCC56\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    cancelDeleteContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n    allowDeleteContainer:{\n        position:\"absolute\",\n        top: height *0.8,\n        left: width * 0.25,\n        width: width * 0.5,\n        height: height *0.07,\n        borderRadius:30,\n        backgroundColor:\"tomato\",\n        justifyContent:\"center\",\n        alignItems:\"center\",\n    },\n    \n    allowDeleteContainerText:{\n        position:\"absolute\",\n        fontFamily:\"Rakkas\",\n        fontSize:width * 0.06,\n    },\n\n})\nexport default ParkingHistory"]},"metadata":{},"sourceType":"module"}