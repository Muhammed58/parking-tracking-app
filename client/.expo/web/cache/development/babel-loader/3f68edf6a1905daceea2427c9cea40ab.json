{"ast":null,"code":"import _classCallCheck from \"@babel/runtime/helpers/classCallCheck\";\nimport _createClass from \"@babel/runtime/helpers/createClass\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/assertThisInitialized\";\nimport _inherits from \"@babel/runtime/helpers/inherits\";\nimport _possibleConstructorReturn from \"@babel/runtime/helpers/possibleConstructorReturn\";\nimport _getPrototypeOf from \"@babel/runtime/helpers/getPrototypeOf\";\n\nfunction _createSuper(Derived) { var hasNativeReflectConstruct = _isNativeReflectConstruct(); return function _createSuperInternal() { var Super = _getPrototypeOf(Derived), result; if (hasNativeReflectConstruct) { var NewTarget = _getPrototypeOf(this).constructor; result = Reflect.construct(Super, arguments, NewTarget); } else { result = Super.apply(this, arguments); } return _possibleConstructorReturn(this, result); }; }\n\nfunction _isNativeReflectConstruct() { if (typeof Reflect === \"undefined\" || !Reflect.construct) return false; if (Reflect.construct.sham) return false; if (typeof Proxy === \"function\") return true; try { Boolean.prototype.valueOf.call(Reflect.construct(Boolean, [], function () {})); return true; } catch (e) { return false; } }\n\nfunction _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}\n\nimport { ContinousBaseGesture } from \"./gesture\";\nexport var ForceTouchGesture = function (_ContinousBaseGesture) {\n  _inherits(ForceTouchGesture, _ContinousBaseGesture);\n\n  var _super = _createSuper(ForceTouchGesture);\n\n  function ForceTouchGesture() {\n    var _this;\n\n    _classCallCheck(this, ForceTouchGesture);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"config\", {});\n\n    _this.handlerName = 'ForceTouchGestureHandler';\n    return _this;\n  }\n\n  _createClass(ForceTouchGesture, [{\n    key: \"minForce\",\n    value: function minForce(force) {\n      this.config.minForce = force;\n      return this;\n    }\n  }, {\n    key: \"maxForce\",\n    value: function maxForce(force) {\n      this.config.maxForce = force;\n      return this;\n    }\n  }, {\n    key: \"feedbackOnActivation\",\n    value: function feedbackOnActivation(value) {\n      this.config.feedbackOnActivation = value;\n      return this;\n    }\n  }]);\n\n  return ForceTouchGesture;\n}(ContinousBaseGesture);","map":{"version":3,"sources":["forceTouchGesture.ts"],"names":["constructor","minForce","maxForce","feedbackOnActivation"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,SAAA,oBAAA;AAMA,WAAO,iBAAP;AAAA;;AAAA;;AAGEA,+BAAc;AAAA;;AAAA;;AACZ;;AADY,IAAA,eAAA,gCAAA,QAAA,EAF+C,EAE/C,CAAA;;AAGZ,UAAA,WAAA,GAAA,0BAAA;AAHY;AAIb;;AAPH;AAAA;AAAA,WASEC,kBAAQ,KAARA,EAAwB;AACtB,WAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,aAAA,IAAA;AACD;AAZH;AAAA;AAAA,WAcEC,kBAAQ,KAARA,EAAwB;AACtB,WAAA,MAAA,CAAA,QAAA,GAAA,KAAA;AACA,aAAA,IAAA;AACD;AAjBH;AAAA;AAAA,WAmBEC,8BAAoB,KAApBA,EAAqC;AACnC,WAAA,MAAA,CAAA,oBAAA,GAAA,KAAA;AACA,aAAA,IAAA;AACD;AAtBH;;AAAA;AAAA,EAAO,oBAAP","sourcesContent":["import { BaseGestureConfig, ContinousBaseGesture } from './gesture';\nimport {\n  ForceTouchGestureConfig,\n  ForceTouchGestureHandlerEventPayload,\n} from '../ForceTouchGestureHandler';\n\nexport class ForceTouchGesture extends ContinousBaseGesture<ForceTouchGestureHandlerEventPayload> {\n  public config: BaseGestureConfig & ForceTouchGestureConfig = {};\n\n  constructor() {\n    super();\n\n    this.handlerName = 'ForceTouchGestureHandler';\n  }\n\n  minForce(force: number) {\n    this.config.minForce = force;\n    return this;\n  }\n\n  maxForce(force: number) {\n    this.config.maxForce = force;\n    return this;\n  }\n\n  feedbackOnActivation(value: boolean) {\n    this.config.feedbackOnActivation = value;\n    return this;\n  }\n}\n\nexport type ForceTouchGestureType = InstanceType<typeof ForceTouchGesture>;\n"]},"metadata":{},"sourceType":"module"}