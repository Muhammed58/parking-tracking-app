{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React, { useState, useEffect } from 'react';\nimport { FAB, Portal, Provider } from 'react-native-paper';\nimport { useNavigation, useRoute } from '@react-navigation/native';\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios';\nimport { LOGIN_KEY, GET_PROFILE } from '@env';\n\nvar Settings = function Settings() {\n  var _useState = useState({\n    open: false\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      actionButton = _useState2[0],\n      setActionButton = _useState2[1];\n\n  var onStateChange = function onStateChange(_ref) {\n    var open = _ref.open;\n    return setActionButton({\n      open: open\n    });\n  };\n\n  var open = actionButton.open;\n  var navigation = useNavigation();\n  var route = useRoute();\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      profile = _useState4[0],\n      setProfile = _useState4[1];\n\n  useEffect(function _callee() {\n    var token;\n    return _regeneratorRuntime.async(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(SecureStore.getItemAsync(LOGIN_KEY));\n\n          case 2:\n            token = _context.sent;\n            _context.next = 5;\n            return _regeneratorRuntime.awrap(axios.get(GET_PROFILE, {\n              headers: {\n                \"Authorization\": \"Bearer \" + token\n              }\n            }).then(function (res) {\n              setProfile(res.data);\n            }).catch(function (err) {\n              return console.log(err);\n            }));\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, Promise);\n  }, [route]);\n\n  var handleProfilePage = function handleProfilePage() {\n    navigation.navigate('ProfilePage', {\n      profile: profile\n    });\n  };\n\n  var handleLogOut = function handleLogOut() {\n    SecureStore.deleteItemAsync(LOGIN_KEY);\n  };\n\n  return React.createElement(Provider, null, React.createElement(Portal, null, React.createElement(FAB.Group, {\n    open: open,\n    style: {\n      fontFamily: \"Rakkas\"\n    },\n    fabStyle: {\n      backgroundColor: 'black',\n      elevation: 10,\n      zIndex: 20,\n      borderColor: 'lightgray',\n      borderWidth: 3\n    },\n    color: \"#FFCC56\",\n    icon: open ? 'close' : 'account',\n    actions: [{\n      icon: 'account',\n      label: 'Profile',\n      labelStyle: {\n        borderColor: \"black\",\n        borderWidth: 3\n      },\n      color: \"black\",\n      onPress: function onPress() {\n        return handleProfilePage();\n      }\n    }, {\n      icon: 'logout',\n      label: 'Log Out',\n      labelStyle: {\n        borderColor: \"black\",\n        borderWidth: 3\n      },\n      color: \"black\",\n      onPress: function onPress() {\n        return handleLogOut();\n      },\n      small: false\n    }],\n    onStateChange: onStateChange,\n    onPress: function onPress() {\n      if (open) {}\n    }\n  })));\n};\n\nexport default Settings;","map":{"version":3,"sources":["/Users/muhammetarslantas/Desktop/Muhammet/Projects/ParkingApp/client/screens/subScreens/Settings.js"],"names":["React","useState","useEffect","FAB","Portal","Provider","useNavigation","useRoute","SecureStore","axios","LOGIN_KEY","GET_PROFILE","Settings","open","actionButton","setActionButton","onStateChange","navigation","route","profile","setProfile","getItemAsync","token","get","headers","then","res","data","catch","err","console","log","handleProfilePage","navigate","handleLogOut","deleteItemAsync","fontFamily","backgroundColor","elevation","zIndex","borderColor","borderWidth","icon","label","labelStyle","color","onPress","small"],"mappings":"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","sourcesContent":["import React, {useState, useEffect} from 'react'\nimport {FAB, Portal, Provider} from 'react-native-paper'\nimport { useNavigation, useRoute } from '@react-navigation/native'\nimport * as SecureStore from 'expo-secure-store';\nimport axios from 'axios'\nimport { LOGIN_KEY, GET_PROFILE } from '@env'\n\nconst Settings = () => {\n\n    const [actionButton, setActionButton] = useState({ open: false });\n\n    const onStateChange = ({ open }) => setActionButton({ open });\n\n    const { open } = actionButton;\n\n    const navigation = useNavigation()\n    const route = useRoute()\n\n\n    //get profile information\n    const [profile, setProfile] = useState({})\n    useEffect(async() => {\n        let token = await SecureStore.getItemAsync(LOGIN_KEY);\n        await axios.get(GET_PROFILE,{ headers: {\"Authorization\" : `Bearer ${token}`} })\n        .then((res)=>{\n            setProfile(res.data)\n        })\n        .catch(err => console.log(err))\n    }, [route])\n    \n    \n    const handleProfilePage = () => {\n        navigation.navigate('ProfilePage', {profile})\n    }\n    \n    const handleLogOut = () =>{\n        SecureStore.deleteItemAsync(LOGIN_KEY)\n    }\n\n\n  return (\n    <Provider>\n            <Portal>\n                <FAB.Group\n                open={open}\n                style={{fontFamily:\"Rakkas\",}}\n                fabStyle={{backgroundColor:'black', elevation:10, zIndex:20, borderColor:'lightgray', borderWidth:3}}\n                color='#FFCC56'\n                icon={open ? 'close' : 'account'}\n                actions={[\n                    {\n                    icon: 'account',\n                    label: 'Profile',\n                    \n                    labelStyle:{borderColor:\"black\", borderWidth:3},\n                    color:\"black\",\n                    onPress: () => handleProfilePage(),\n                    },\n                    {\n                    icon: 'logout',\n                    label: 'Log Out',\n                    labelStyle:{borderColor:\"black\", borderWidth:3},\n                    color:\"black\",\n                    onPress: () => handleLogOut(),\n                    small: false,\n                    },\n                ]}\n                onStateChange={onStateChange}\n                onPress={() => {\n                    if (open) {\n                    }\n                }}\n                />\n            </Portal>\n        </Provider>\n  )\n}\n\nexport default Settings"]},"metadata":{},"sourceType":"module"}